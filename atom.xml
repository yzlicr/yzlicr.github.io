<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>/images/logo.gif</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-09T05:35:14.560Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>小宝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分类</title>
    <link href="http://example.com/2024/02/09/categories/"/>
    <id>http://example.com/2024/02/09/categories/</id>
    <published>2024-02-09T05:34:10.000Z</published>
    <updated>2024-02-09T05:35:14.560Z</updated>
    
    
    
    
    
    <category term="categories" scheme="http://example.com/tags/categories/"/>
    
  </entry>
  
  <entry>
    <title>爱恋实记</title>
    <link href="http://example.com/2024/01/25/love/course-4/%E6%81%8B%E7%88%B1%E5%AE%9E%E8%AE%B0/"/>
    <id>http://example.com/2024/01/25/love/course-4/%E6%81%8B%E7%88%B1%E5%AE%9E%E8%AE%B0/</id>
    <published>2024-01-25T04:15:22.367Z</published>
    <updated>2024-02-09T06:19:21.566Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cb776c1eec678b869d0afd9ca0ba6c535e9335d4b98c441d03b22821829c6839">1b0e487273b3085c419a7eae21d23504a81c3bb7f7b0a6ba16e97f2df5a5155eb89662057feaf571751585cba28a651a2df1d268de31d683865cd2c9344575c38a783969d3af2a142737fcaa9ad4cc7d537c6266967e11c12c4090428d9fd43225411ebc66d4fcfd966b514a6547d1affb27fbff563086745372a8406b6623fcb57be654a9ba40a17163cbe5a7e67f00a647e0e06311a89a2c3ab1965174ef22757b83aeb27ce4a9221ff1d078c5fbb416be3e33f6aba8fc67955371f859e3d921008e6454a202e337222281119b6488ea4e6e4dab9faa7b3b424265c6fb3ca948fc1a99d9134abf7b090bd1f33e759c800ab79af2de8d41afe9ad02f5181432ac635532f9c90b978f6136ce85ba8be576e83455c831661a49f7c91ad4b63600b1d6788464d65eece4f6d5ea450d561369830f9388eb768e96f1ed48ca032af8c93763d54a6b88819b6edeb2471689b68b827f5c49cf6b7f0f65c037a912586d31dbc11a286a606f49d82f3c22acd1451010dc56ef9f868b473e97063f1163ae063a46148c402e214f7debeb26fb406389b3e7f208255cd73fcbd6f7735e81394adf3c00656f2e77494d3025a55c1d4143a618a4add6e4352e9841c0e5887a8ffa0fbbf0a041fb72c29d2b0a5d2b585e62fec252989eb10ad049b2c27750f1d155a88368a6ec404bbc683aed28e09643dc6ddac802b731f807a3f99051618c853973cb4602724408d5f1e0e040b27a680ecda02eef50e4acd13bbc25039c6df0ef237c895107e8b616814828a56f98bd414367e373b66ea92226eb595d3b1e8bde9cde3eb3054682983e17070ce1c1cdf56f4c612e7bbe9249f2131b160edab6e466981ffce2a2558255d88527017883972a862e99d25a640cf08ef85d56e84c554c7d385a8d549d83d16ad86943aec74a1a526826583c3543a22c143a8200b5eaebb0fee2f3456f1ea335c66e9ae42a43bd07503018345241a66b3bbdcb2c904dd656b4cb64614bac66c199fccb3346d4c533097bc9cc3e0adabdf585863e8cae27f672a2a46ed256c44df7e12344d76ac4d26d1fa33fa481d577cf362e5909006e45bfdb247623303e8c6ffd10c021c0b20e31a001c174fb77d25af03357818d91b5d5968efcedec1eeaa4ec87d39256bf2d217a164be4fb496b326713dae778ca5fbd8da7f30904ad7408c32e1ec36e0d95acec32f5d2b42012bdffac0caf1e1240ae19be1d441a2f70368b90d8600c1cc4209bc4d08045299e7f78cfe5e9ca3af7094ce4a6bacde895db51818bf5572aa6494faa45eadd33c936b2b53cb77e01caf2daf0484cbb2aaaceb782ffc98ab51ccdeeadd81d7b091dcf7193b7c254a0a35d291006e029164ac2df598bb2b7c17d3289e3e984015ecb925e8f2872f58853c0e7caf8c169a79b1c66fa194bb6ab1d82a2ee96cde3a81f8dce8502b55e0f1cd6a12b4af4b2472a666d26015d49f15bdc10f033ca3375c49fae717dea32b3ae070124418b52295b622014b3c382db26ac28a62c63b2050e28f86158f7d4bea629ce64c3a055a0e568bb84d57706adfe0234bd9e199015b30c7fa5c93ea30044b1f5f2ff205504c15c507d2a130e4a419a4987283297fce8abb6fe006d5712aec48078871215548894e40593fc09717840535526bb1523cf70d325c07f10c372d747d05e847c77dd6248a62c2640cf86c2d520bd17c4451860ccc4e67e68e8761de78718b57156b83a63c1879c1766c1ab4d9291cac8a928fd1f1e60ad9fd9458ecb76e76844c8deabbef10484144fc39e32cc059f3895ce62c34c5198e9a8d1eacae5aa2ebebb9e3d1df7a0ea6466c0bdb406c4c3367054e2fe0b8fd21bb61548af3ad7daa37a29495aaa17fc6c3ffaefbc5447b6f7b131e7c715d83918fb16973ff0c70178ad92f1ccc5fa86eda8ce87385ea70861ae0d844347bc81cbb72dd71fe38d10acc83cdd89af29c7985e4e62510f0f4107fd9d456d7b79d174cd6c6234ddc5aa42981925ae7488e42d922b638d951a8921a880c51fa4506c2d535a5308081bdbf2b06bf0118d74ba890b1aa991ecad842dfe7e1f0203ab64a705b8628abd7a659ac12ae913d13b7ecde04e7d7db077055c46fb9e63de55715514b2001b5ed50a1c676f4251b9dd7da8620692bd12bd7858ccff36a7f5120042438b2f67ada65795eacf15c5befa5bdbf641c9ca964f1778b555c1021f690443ae70bef6f365dd99b687c71bd35a1253e90b7251c1f70e0b03708d55caa30be1817f9d4ae294c713cf9ba769cc54bf811c70c9a445f3d794d98bde37e9694aa8e29db4fa2852f70000ac9c23c2dacdbb3f41b32eb9033b7bca4ac4c82dabfe4215bb4591d99245c86aba0ae73b7e98bc0e0d0237b5132202049b78d9d992ad121be3b26826acbc51a969eae5fac779d11f8ff5aaecd6ffd252bf9fbc7987f7ddd0ebbbef55c966394219887a04b17e894790c99680bc772d45a5328847a1814850d7dadf798f10a955f610bd4502c31b53baf6727e43bc18f207eb0bd91e2e9de62e20bad271b8ad2ebf50c5795bc45f80c1d780faa7fb84c620caf6e273f7231b58e68006af94095e301c2a5a310a4298bbc62f3f032e95ee8023ec71f63812bf1813ac9ceceb20d53a13b1cbdde5c2d7745e3224847a150305a0c2e04fe67146b8551f46ccd560cb6b70147d6ba72746ba0c597ee060a5745ba6be06a01f580afb348e832e6e2dfe51ea0e8839d008ce0680e242eb4ef66492f47c9c4a4be5d652b3208037afc63b02cc099f5d1f27c05af5a787c3ac5f9d6fffb69ae50d0f34be2518633cb9cfb6a796c46f9e5015b034a98a4a6e6f4b9a587e003836d2f8aa809f536ac45e8502bf41634034ca12e6958c0571a69e48cecdf729764772290a797f9deb26463ba68c67be4dffb51f5166f02a68be3f1c30adbb547b59c00315669f5fbe4fd9bdefa72b000d6533a7b27406c55a844a089eebbead4fdceffd32b65600733f6a449cac73e3b84744328ddb19bda51be658e941a39332f5c543a161ec960ace3e2319e4aa703bbce7b4d9d6579a446b38bbcf8c57deeafc9c3a7fc72a23107ae7745af9c02f2a17349c494299df0332bfcdf4eb0fd0e013d4252816c0cf5f0ebe19c6e67c64b0bfbc5aec56205b7ed87bd45b4798fd166e5902e2dc299fba9829c0db2d05d5379ff47d8838d5b8e4209fcf4e605b75cd4e6ea565457bd0de2059f4ba9d857da6003fb5da01ba368793db5667c357f12be50188d1d588ac6ba97b80246f2505d6b921da2ceb08b1f22276a40e456af41618769814260b6162f7210f6e089072ed209859355d4ce5aec96cff806fd376d778c2a67dd484c28306f705e2b67446fcba6042e7b3a4b67a19e95916243b5dcfd75baab08edf375181c977c8969e38941e660d4c45eba7fb0dbffd0acba4d8360c0aec36656b29a9817b0aa43a246f861f7e073e1b97d517fd2b235abfdb89c22345bd2bbfeed12005a505439d7f26cb0ae38a50e9014c7ae7f3c7fc34731993b35ffd896c33980e67f745f0919990263ff0229a98faf9a674a0e1aea64e679599bcab506a1bc42837875f404ca7cb685af1d55aa12e5fedf6ec2082e20cb651ca07fe58b586bfac5994898a78928b1332c7eb4ae0a0c0ed25b6922fb5024e0fb999fc1b3d2b5bf77fdd6d58fb15d7d050d8605959bfd2a01408d8a61631c753343b6d481fd2808f042708fc1f59e22c06f00f11fb1d1b9eafcde2ef76d25cf3b25739afdba09eeab277e5dff513c426e33bd69a45c7d54c42cdeba4564093763461bcbd35912358da4f1fc397faf278b4ceba06a6fe750260194a3e5bbfe37228d62b9f16e56fe7f18ae0a0c479799eb9f06e31f4476d8ed2a81ce7ff9d947932e2122f2c623b06e8b6778ed78e7ec58bedddcb62e1137123b1f005a0d5a25bacfb8031791720a639a984bbdba3422c4647127e58b2b89ffaf9e7da68566e5d355bbc230fd629330a208ded1e1b50ae07c718b0fc11b6eb90af9f1da324958d5921450e6920de3e09b0acb31a6d2e7b6445207bb7b23c2d33303a2268de8e6ec3eaf82c4477bfbb13309a779d19fcd3ecf528f5653918b4874bd98dc06648a1f65d9edf08cc26cc51fbac392e37a23b2413287274e5f6fd76641b341b4736b4736035c09415989b18d5668f0f35f39e6660d003fda5d6d52e7f19c62b892695e686f42ede627851558e04626fd15126b9bf52ee683bdc22f4572dda610a30ecee5469a714b7710d3e1cea6a7a129af10305479f2ea0b981df2619d4eeb8a2ae8a5de7d1a8d739667be104e6f310ee15a5ec07e4d3986f4004f044fa84fc11b7d0be15070e1bb43b10b2b0e8ec9b486820438cee95f3e1da143fc821756c3fae1ad858561bc7a202a4f47aa715a0ecc36f62d26d1d7390598810f5edbe46e47216a47f89fbd2e2ad53df8143251cc50b1b371fb5ce78a7a2c775f6bda5023a13762f38864ae4370ecd604d5ec774c8b0a1ae0d6cedd351cd30dff9496e5e90ceba539d9a67fcb34ca774b2934402b4cde1c003d18388b317d2748ef3ba99330209a8775ed3b24c5d5a26192272112b56e14f29f838d393fd3aaa478fc27c4a4cab26981ccf26ce3b2af8ef74157ad9ff3fabdb239c7127d3f412c227fdfed90aa9cc0bad3bfb1a214e6a2e9bb41c1ad6126bb7b0e3de1267408162bad7412c7eee9220e5e97bfae42a566c51e52d1ad2450b4f3f5ffda528c06f564ff4fb8baa0e3128f4a93f39ad4d817375664f9cf1dfc458b2fc87d87bbe87b80253e68fce575bdab5b4b90515333fb7e011a112106adeed8342ab856a6fa5a5342dd970aa9e1822e80383092e282d9131001a336910f8fbee65e5f1fad87aa8eedc899d336ffc9c336d4f8fb9f3da0e7d28495b6c9b828c1caba22362dec17a69b89455b884b9c8da1af675c23606876a0811d9c35499f5bb984472d64372285376e33cf9adf87a4e70eee1481d81d06f6889d2a337001b8b2a9aa858bcfa394ad2373364e8a35cada69168facfc1d996fb72f0d1d9c62a83e69d625ef469139008698d3209078ffcb3392e1f6bbb2bd3b13a4fc8493fcd58e5571d704b89caebd7262320d33ac186043db290b9dea9e51cfb505f35dcf7ce8e919e696120e68c5abee8eacb8e2faa1b390d1863089e9e14453bc995f8fdfefabbb2aa26ee02449bfcc243c6bdcb34f1cd0f98477f8e4175d15ea4dbb8c45d99bfce1069fcd746f2df455088352a20b37227ede5158ecaeebc4ca9db02e92ec2fc8cb95641408ad9d585bc4f4831ee3782e9808e4ea45e70bbd86bc3844f329dcca1b74579a0e1907d1dc22b56538b98b77c6190833745d2a1b19235bd9b881082eb07a22548fe42a4a20facf8a9120f389ac8aaf33360eeef7874db6a2117e7d06b2d42a95b9b82eff20dbbd141f8e5169b240bc9b090ac057e03486e46baf4c162eafc62f1b5c1ab1480828d44e9825b56ca0e0eb65ee0525b7e8933210c4cee9e9172c7a4f733b589b965a2755138b50658839e976c08dcbc9badf04f33baa1c66a774c4a69c99540f8df9cc17800f84674f720bdf33d034e82a0cc9239b9749afe548c16acd04188cf6a1336cf899531aaa83c49b2d44e167a4569f831f50bd3e9ea26042ed3a3018ae6efc1c37e38babfcb407fab8485c447d2855fcb65a3760838c7b264de75b21d2217364e9d433535d7655949e39422751f138167780f9764dc89b42e3bfaef0e958c0f305e28241163f000d239508ec78df5718eb03246629633ad51723bd3b6cfc09ddaf2bbfc551670163838ecca807fdfe05dbc5021427c41999e8055061116654cd9692d7a9a21772182e02a34844d83a70de196ebde86c554b5ecfb98c0ca84ed5e277e84617250440762d10c162dc2fe08edba6391ba9484044c864a029af62109544fd91dcd9ba666270d32f14c1d66ff6cc08666ff0b50b908905b8b21cddeee492b1d7244d9abf972d0c7111f9e35b5bae14e559340d6b71f6ea4b97a7c4e281ed7a02468a982b0eb645e6a64ec00336cdb039ffa68e04721188e4474bb1db00f830716314999892e212436070f10e521b23489c9a4ac37398f18248bcdd36ac4b52f4d4bc92dd3d886754b192bef27824ce0fdf7d33881a6d00a675120bad45ed8249c91571317bbf5d768bfb0932e98303fe1078d1ad04de48d7ad4dd501bd390cedfe81c2d0651809b1654008fefcd5af4ece7a75b907de027bfec33f847da3ebf77c2cdbeb7266330ab209b82b1c75bf798bee92e075e48088264e0fbe2abc47dbd187dea7851e830255ed7a6fe31c7c14c1315c9036fc4bedf5c0f11619a949f6f0811d43bfece45d7574ee001b69aa4da2ffa45f78009ef7c64f4e87776b3510afd20f311b907cf45ac21c4c4315c1e070b88025b9e854d913bdc997f04f23f608b79da99b67d95b4f8e6ccefecd1c9c02b3eb4e80935eea1fa8ad95560a2107eff50ac691411d5f38afde39345826fe15e86e9134ce14c9018594ad373206bb9ee544e3a97916f93e918bebcf02eae08a1badd56703fae97a1730817102eb5f71252828395dcb0a09faf49178666f3b0f57da9569370a272f77e134b538607f9e2b9f1912cea8add2560b19d7106edc3f859ba64300e61c2de52bc410da1feeb06f7550ee8203befebd556ecbdce1768ba102e1a3fb003b6c21f7a8a95eb4b9f29b69eea39e381e10ff3da6c71ed94ae1172af5c63a58d738729a3054172af2b63ec3e59b0703665718d2df94be5b031faddb29d1944060972132e38fd8866c7a520becdb809c37e888901e08840cc3ec5d2cec761eb947ed48c2b1ac0e21d93fb418e7a51774227a6f3afc9a91ca34eaf600961f4bc62c925834ec5fff08ece70208b95ed420c1da51c8f62adab4f05b7a64fc8fcf096307626acbe9c0b5d545632ae62a8bbcb410c1050c48c88dde15fd8cf983dcb4b3891b571fba9c69075b8a613f6daa7d65a99bca262d4aa248b793d8e831d5cbec02d08b373009236108a4f6c88cd3a7d904e8a41f5e1da723703fdf248f47f50003cb4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">实记</summary>
    
    
    
    <category term="爱情篇" scheme="http://example.com/categories/love/"/>
    
    <category term="爱情记录" scheme="http://example.com/categories/love/course-4/"/>
    
    
    <category term="爱情" scheme="http://example.com/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>爱恋前言</title>
    <link href="http://example.com/2022/10/23/love/course-4/%E6%81%8B%E7%88%B1%E5%89%8D%E8%A8%80/"/>
    <id>http://example.com/2022/10/23/love/course-4/%E6%81%8B%E7%88%B1%E5%89%8D%E8%A8%80/</id>
    <published>2022-10-23T04:03:58.432Z</published>
    <updated>2024-02-08T03:47:47.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="恋爱前言"><a class="markdownIt-Anchor" href="#恋爱前言">#</a> 恋爱前言</h2><p>最近在整理恋爱板块中的内容，总结下个人对恋爱观浅浅的理解，我不是颜控，更多是看两个人是否合得来。经过上一段感情，后来我领悟到六字真言，惊喜，偏爱，唯一。</p><h6 id="生活需要调剂品恋爱中的情侣也是一样需要的细心的朋友会发现这六个字一直在我朋友圈的签名中-男生总要经历过风雨才会成长感情也是告别曾经那个不成熟的自己-已最好的姿态去迎接我的女孩"><a class="markdownIt-Anchor" href="#生活需要调剂品恋爱中的情侣也是一样需要的细心的朋友会发现这六个字一直在我朋友圈的签名中-男生总要经历过风雨才会成长感情也是告别曾经那个不成熟的自己-已最好的姿态去迎接我的女孩">#</a> 生活需要调剂品，恋爱中的情侣也是一样需要的，细心的朋友会发现，这六个字一直在我朋友圈的签名中。男生总要经历过风雨才会成长，感情也是，告别曾经那个不成熟的自己。已最好的姿态去迎接我的女孩。</h6><p>努力想当一名幽默的搞笑男，因为深情可能会消失，但是搞笑不会，在 B 站上关注了很多情侣博主，很羡慕他们的相处模式，充满了深情又幽默，是我对爱情向往的一种状态。幽默搞笑是爱情的保鲜剂，希望以后我的女孩，每天都有爱恋中的 “小惊喜”</p><h2 id="热恋中的我们"><a class="markdownIt-Anchor" href="#热恋中的我们">#</a> 热恋中的我们</h2><p><strong>我希望我和我喜欢的人共同进步和成长</strong>。在他在学习时我也要学习，不仅是互相喜欢，还是互相竞争，永远不会停下脚步。</p><p><strong>我希望我和我喜欢的人互相依赖扶持</strong>。互相毫无保留向对方诉说心中所想，爱情的小屋总要缝缝补补，才能禁得住风雨。</p><p><strong>我希望我和我喜欢的人互相平等</strong>。就像两棵橡树一样，不会因为家境学历和种种外人的观点产生歧视，产生误判。</p><p><strong>我希望我和我喜欢的人互相交心敞开胸怀</strong>。我遇到不开心的开心的分享给你，你也分享给我，我们互相拥抱一起哭泣，一起快乐。</p><p><strong>我希望和我喜欢的人一起走过林间小道</strong>。美丽的樱花林，一起漫步在海边，去观赏滔滔江水，去品鉴着人世间的酸甜苦辣。</p><p><img src="https://cdn.jsdelivr.net/gh/yzlicr/picgodemo/img/202302121455192.jpg" alt=""></p><p><strong>我希望和我喜欢的人在一起给他带来活力与快乐</strong>。带来幸福与安全。</p><p><strong>首先，尊重和信任，这是基础</strong>。两个人在一起互相信任和尊重是基础，如果另一方只是玩玩或者欺骗和利用，这样就无法做到真正的尊重和信任。</p><p><strong>其次，良性的沟通</strong>。误解的产生都是因为沟通不畅或者受人挑拨。两个人长期不沟通，最终只会导致两人越走越远。</p><p><strong>最后，外界的评价和所谓的为你好</strong>。两个人在一起，会有来自外界的评价。其实你们的问题只有你们自己知道，不解决问题问题永远会存在那里，一直无解。</p><p><img src="https://tva1.sinaimg.cn/large/007gkGXrgy1h7ubr6un5jj30vc0ikdrj.jpg" alt=""></p><h2 id="正确的爱情观"><a class="markdownIt-Anchor" href="#正确的爱情观">#</a> 正确的爱情观</h2><p>正确的爱情观没有标准答案，只有参考答案。<br>随着年龄和阅历的增长，那些我们以为是对的东西，总会发生变化。</p><p>以前以为爱一个人，就是把自己所有的东西给对方，掏心掏肺去爱一个人，去追一个人，但是当你受到一次又一次的挫折以后，你会发现，感情需要双向奔赴，你付出的再多，对方不喜欢你，你做再多都没用。</p><p>后来，再遇见的人，好像谁都可以，但好像谁都不行，你以为你不会再动心了，也不会再像以前一样用力去爱了，但这个人出现了以后，你所有的条条框框全都打破了，他对你很好，也喜欢你，觉得爱情来了，这次我应该可以得到爱。但事实又打脸了，你们走到了结婚的前一步，两个家庭成了最大的阻碍，原来爱你的人，也会变得如此现实，变得你都不认识了。</p><p><img src="https://tva1.sinaimg.cn/large/007gkGXrgy1h7ubr7lrrqj30z70i0gu9.jpg" alt=""></p><p><strong>所谓正确的爱情观，没有固定的答案，而是有一天你遇到一个人，你想和她恋爱，你想和她结婚，能在她面前放下所有的防备时，那说明你遇到对的人了</strong>。</p><p>爱一个人，就不要强求对方做出改变，要求一致，要用自己的爱去引导或适应对方的行为方式和思考方式，有原则地包容，有理智地疏导。</p>]]></content>
    
    
    <summary type="html">前言</summary>
    
    
    
    <category term="爱情篇" scheme="http://example.com/categories/love/"/>
    
    <category term="爱情记录" scheme="http://example.com/categories/love/course-4/"/>
    
    
    <category term="爱情" scheme="http://example.com/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>人生篇-迷茫</title>
    <link href="http://example.com/2022/08/30/note/course-3/2015-02-14-strum-life/"/>
    <id>http://example.com/2022/08/30/note/course-3/2015-02-14-strum-life/</id>
    <published>2022-08-30T06:19:34.636Z</published>
    <updated>2022-10-23T06:34:39.829Z</updated>
    
    <content type="html"><![CDATA[<p>直到临进放假，整个人才完全放松下来，暂时忘却那因工作 Delay 带来的耿耿于怀，赶走那常伴左右粘腻的莫名焦虑感，不用担心晚睡导致的第二天工作效率低下，身体和脑袋平日里要应付各种事务带来的紧绷感逐渐远离，难得的体会，当然任思绪飘飞。</p><pre><code>             ---&gt;          ***********      ^   ***           ***   |  | **       mood      ** |  |   ***           ***   v         ***********                    &lt;---</code></pre><h3 id="关于工作"><a class="anchor" href="#关于工作">#</a> 关于工作</h3><p>每每回望自己干 IT 的从业经历，常觉得是一路崎岖，走下来不易，偶尔跟朋友聊起时涌上来的也是一种唏嘘感慨心酸无奈交错的复杂情绪。总是习惯性地认为我比原本大学毕业时在同一起点的小伙伴走了更多的弯路，工作上的各方面包括技能薪酬等都需要更上一层楼才能不落于人后。撇开这里可能带来的「不服气」、「我并不比谁差」、「想迎头赶上」之类的积极因素不论，将自己假定于比别人从业时间短经验少所以弱的地位的想法可以休矣，更不论很偶尔会以此为借口来原谅自己有些不如人的地方。这段时间里这种不好的心态带来的不良影响在持续，它让我变得贪婪，在学习技术时变得功利，但实际上过去的几年时光应该足以逐渐消化掉我在乎的差异。</p><p>再者，每个人都在这世界上划着一道独一无二的轨迹，又何必有别人的轨道就更好的妄念，你在这里仰望别人的时候，也还有好多人在渴望与你比肩。</p><h3 id="关于钱"><a class="anchor" href="#关于钱">#</a> 关于钱</h3><p>那天几个人在饭店聊到时事时我说了一句：「这就是因为没有信仰」，朋友接道「谁说的，我们信仰钱啊！」当时就感觉她说得好有道理，我竟无言以对。</p><p>对钱的追求一定程度上理解为对更好的生活的追求应该大部分人是没有异议的，只是希望在这个追求的过程中我们能记住自己的目的是更好的生活，而不是钱本身。不要在这个追求的过程中迷失，生活的首要任务应该是利用现有的资源过好现在，而不是一直牺牲现在只为了一个「莫须有」的美好未来。</p><h3 id="关于爱情"><a class="anchor" href="#关于爱情">#</a> 关于爱情</h3><p>在面对「为什么要见面？拒绝‘爱你’‘想你’这样的矫情答案。」这样一个棘手的问题的时候，脑子里似乎有无数个答案试图冲出来但却被贴上矫情标签一一打回。</p><p>爱情也许是这世上最难具象化的东西了吧，不知道近期推出的各种有诚意的聊天工具能不能帮助到被此困扰的思考者们（此处当然是玩笑）。</p><p>试着从网友的智慧里找到一个答案：因为成熟的爱情里的两个人会懂得相处的时候彼此相容，相离的时候彼此相思，相守的时候彼此相依。至于爱情是什么，爱情就是两个人互相的征服，彼此一定要有最与众不同的一点让对方喜欢，比你还要清楚你身上的每一个缺点，当然，更爱你的优点，不会不顾一切对你好，但是你会是我在生命里付出最多的人。</p><p>哈哈哈哈好矫情的回答笑 Crying。</p><h3 id="the-end"><a class="anchor" href="#the-end">#</a> The end</h3><p>最后，以例行的励志高昂充满希望句式结束这一通感慨（网摘）：</p><blockquote><p>酸甜苦辣咸涩<br />都可以<br />唯独那无味的<br />才最叫人感到失落<br />赤橙黄绿青蓝紫<br />都行<br />唯独那无色的<br />才最叫人感到暗淡<br />喜怒哀乐哭笑<br />都是歌<br />唯独那无表情的<br />才最叫人悲哀<br />生活不能淡而无味<br />生命不能黯然无光<br />人生应当有所作为<br />红红火火</p></blockquote>]]></content>
    
    
    <summary type="html">好像总会缺点啥。</summary>
    
    
    
    <category term="记事篇" scheme="http://example.com/categories/note/"/>
    
    <category term="成长记录" scheme="http://example.com/categories/note/course-3/"/>
    
    
  </entry>
  
  <entry>
    <title>1、认识HTML</title>
    <link href="http://example.com/2021/08/26/computer-science/course-1/HTML/"/>
    <id>http://example.com/2021/08/26/computer-science/course-1/HTML/</id>
    <published>2021-08-26T07:09:47.261Z</published>
    <updated>2022-10-23T15:11:36.911Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是html"><a class="anchor" href="#什么是html">#</a> 什么是 HTML</h3><blockquote><p>HTML 基础知识</p></blockquote><h2 id="html简介"><a class="anchor" href="#html简介">#</a> HTML 简介</h2><blockquote><p>HTML(Hyper Text Markup Language<br />) 即 “超文本标记语言”，是用特殊标记来描述文档结构和表现形式的一种语言。严格地说，HTML 并不<br />是一种程序设计语言，它只是一些由标记和属性组成的规则，这些规<br />则规定了如何在页面上显示文字、表格、超链接等内容。</p></blockquote><h2 id="web浏览器"><a class="anchor" href="#web浏览器">#</a> Web 浏览器</h2><blockquote><p>用户浏览网页实际上是通过 Web 浏览器实现的。目前主流的浏览器<br />有微软公司的 IE（Internert<br />Explorer）和开源的 Firefox 以及遨游、腾讯 TT 等浏览器。</p></blockquote><h2 id="html开发工具"><a class="anchor" href="#html开发工具">#</a> HTML 开发工具</h2><blockquote><p>用 HTML 语言所编写的文件称作 HTML 文件，它是应用最为广泛的网<br />页文件。HTML 文件和 ASP 文件一样，实际上也是文本文件，因此可<br />以使用记事本、FrontPage、Dreamweaver 等任何文本编辑器编辑，编写完毕后保存成扩展名为.htm 或.html 的文件就可以了。</p></blockquote><h2 id="制作一个简单的html文件"><a class="anchor" href="#制作一个简单的html文件">#</a> 制作一个简单的 HTML 文件</h2><blockquote><p>新建、保存和浏览 HTML 文件的方法和 ASP 文件的方法是完全类似的<br />。输入如下图中的代码，然后保存到文件夹 C:\inetpub\wwwroot\asptemp\chapter2 中，最后在 IE 浏览器中输入</p></blockquote><blockquote><p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdC9hc3B0ZW1wL2NoYXB0ZXIyLzItMS5odG0=">http://localhost/asptemp/chapter2/2-1.htm</span> 即可访问该 HTML 文件。</p></blockquote><hr /><h2 id="1png"><a class="anchor" href="#1png">#</a> <img data-src="https://s2.loli.net/2022/10/23/5LSZefHMnNlQj6b.png" alt="1.png" /></h2><h1 id="html基本语法"><a class="anchor" href="#html基本语法">#</a> HTML 基本语法</h1><h2 id="html标记"><a class="anchor" href="#html标记">#</a> HTML 标记</h2><blockquote><p>在 HTML 文档中，标记（tag）实际上就是规定了各种内容的显示方式<br />，例如有标记 &lt;html&gt;、&lt;/html&gt;、&lt;head&gt;、&lt;/head&gt;、&lt;body&gt;、&lt;/body &gt; 等。标记在使用时必须用尖括号 “&lt;&gt;” 括起来，而且大部分都是成对出现的，起始标记无斜杠，终止标记有斜杠，当然也有少数标记是单独出现的。<br />起始标记和终止标记之间的部分，连同标记在内，称为 HTML 的元素。</p></blockquote><h2 id="标记属性"><a class="anchor" href="#标记属性">#</a> 标记属性</h2><blockquote><p>所谓标记属性，是指为了明确元素功能，在标记中描述元素的<br />某种特性的参数及其语法。对于绝大多数的元素，都含有自身的若干<br />属性，这些属性的作用是对该元素作用域中的内容进行进一步的修饰<br />和限制。标记的语法格式为：</p></blockquote><blockquote><p>&lt;标记名 属性名＝“属性值” 属性名＝“属性值”……&gt; …… &lt;</p></blockquote><blockquote><p>／标记名 &gt;</p></blockquote><blockquote><p>在 HTML 标记中，可以有多个属性，中间用空格隔开即可。另外，<br />不同的标记一般有不同的属性，但也有一些属性是通用的。</p></blockquote><h2 id="文档头部"><a class="anchor" href="#文档头部">#</a> 文档头部</h2><blockquote><p>文档头部就是包含在 &lt;head&gt; 和 &lt;/head &gt; 之间的所有内容，它不显示<br />在页面中，但它会告诉浏览器要如何处理文档主体内的内容 。</p></blockquote><blockquote><p>主要标记 ：</p></blockquote><ul><li><p>&lt;title&gt; 与 &lt;/title &gt; 标记（标题）</p><ul><li><p>&lt;bgsound&gt; 标记（背景音乐）</p><ul><li><p>&lt;meta&gt; 标记（提供相关页面的元信息 ）</p><ul><li>其他标记（比如 &lt;link&gt; 和 &lt; style &gt; 标记 ）</li></ul></li></ul></li></ul></li></ul><h3 id="标题标记符title-title"><a class="anchor" href="#标题标记符title-title">#</a> 标题标记符 ——&lt;TITLE&gt; &lt;/TITLE&gt;</h3><blockquote><p>标题标记 &lt;title&gt; 和 &lt;/title &gt; 用于定义网页的标题，并在浏览器窗口的标题栏中显示。网页标题可被浏览器用作书签和收藏清单。举例如<br />下：</p></blockquote><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt; 这是网页标题 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>请看浏览器的标题栏。</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/3rXDYg2A6NwnM1V.png" alt="2.png" /></p><h3 id="背景音乐标记符bgsound"><a class="anchor" href="#背景音乐标记符bgsound">#</a> 背景音乐标记符 ——&lt;BGSOUND&gt;</h3><ul><li><p>用于指定网页的背景音乐</p></li><li><p>属性</p></li><li><p>src，用于指定背景音乐的源文件。</p><ul><li><p>loop，用于指定背景音乐重复的次数，如果不指定该属性，则</p><p>背景音乐无限循环</p></li></ul></li><li><p>例子</p></li><li><p>&lt;BGSOUND src=&quot;canyon.mid&quot; loop=&quot;1&quot;&gt;</p></li></ul><h3 id="meta标记符meta"><a class="anchor" href="#meta标记符meta">#</a> META 标记符 ——&lt;META&gt;</h3><blockquote><p>META 标记用于描述不包含在标准 HTML 里的一些文档信息，例</p></blockquote><blockquote><p>如开发工具，作者，网页关键字，网页描述等。这些定义的内容并不在<br />网页页面中显示，但是一些搜索引擎可以检索这些信息，浏览者可以<br />根据这些关键字或描述查找到该网页。常用功能是设置自动转址功能 —— 使浏览器自动从一个地址跳转到另一个地址。</p></blockquote><blockquote><p>META 标记符的常用属性：</p></blockquote><ul><li><p>name 属性给出特性名</p><ul><li><p>content 属性给出特性值</p></li><li><p>http-equiv 属性指定 HTTP 响应名称，通常用于替换 name 属性，HTTP<br /> 服务器使用该属性值为 HTTP 响应消息头收集信息</p></li></ul></li><li><p>例 1</p></li><li><p>&lt;META http-equiv=&quot;Content-Script-Type&quot; content=&quot;text/javascript&quot;&gt;</p><ul><li>作用：设置客户端行内程序的语言是 JavaScript</li></ul></li><li><p>例 2</p></li><li><p>&lt;META http-equiv=&quot;Content-Style-Type&quot; content=&quot;text/css&quot;&gt;</p></li><li><p>作用：设置行内样式的样式语言为 CSS</p></li><li><p>例 3</p></li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt;META 示例 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;META http-equiv=&quot;Refresh&quot; content=“10;</p></blockquote><blockquote><p>URL=<span class="exturl" data-url="aHR0cDovL3d3dy5nZGNwLmNuLw==">http://www.gdcp.cn</span>&quot;&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt; 再过 10 秒钟，我就上学校的网站了！&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><h2 id="文档主体"><a class="anchor" href="#文档主体">#</a> 文档主体</h2><blockquote><p>文档主体是指包含在 &lt;body&gt; 和 &lt;/body &gt; 之间的所有内容，它们将显示<br />在浏览器窗口内。文档主体可以包含文字、图片、表格等各种标记。<br />在文档主体中还可以添加许多属性（如 background 、text 、leftmargin<br /> 等），用来设置网页背景、文字、页边距等。</p></blockquote><h3 id="设置页面背景颜色-bgcolor"><a class="anchor" href="#设置页面背景颜色-bgcolor">#</a> 设置页面背景颜色 —— bgcolor</h3><ul><li>&lt;BODY bgcolor=“颜色名称 &quot;&gt;</li></ul><h3 id="设置页面背景图像-background"><a class="anchor" href="#设置页面背景图像-background">#</a> 设置页面背景图像 —— background</h3><ul><li><p>&lt;BODY background = &quot;背景图案的地址&quot;&gt;</p><p>使用背景图案时，如果图案小于浏览器窗口的大小，则浏览器会自<br />动象铺地板砖一样平铺背景图案。可以同时设置背景图案和背景色，以便在不能显示图像的浏览器上显示背景色。</p></li></ul><h3 id="页面基本属性定义在body中"><a class="anchor" href="#页面基本属性定义在body中">#</a> 页面基本属性 —— 定义在 &lt;body&gt; 中</h3><ul><li><p>background=&quot; &quot; 背景图片文件名</p><ul><li><p>bgcolor= &quot; “ 背景颜色</p></li><li><p>text =&quot; “ 文本默认颜色</p></li><li><p>link =&quot; “ 未被访问链接源文字的颜色</p></li><li><p>alink =&quot; &quot; 被激活链接源文字的颜色</p></li></ul></li><li><p>vlink =&quot; “ 访问过链接源文字的颜色</p><ul><li><p>topmargin =&quot; “ 信息内容的顶边距离</p></li><li><p>色彩名</p><p>十六进制值</p><p>色彩名</p><p>十六进制值</p><p>Aqua（水蓝色）</p><p>#00FFFF</p><p>Navy（藏青色）</p><p>#000080</p><p>Black（黑色）</p><p>#000000</p><p>Olive（茶青色）</p><p>#808000</p><p>Blue（蓝色）</p><p>#0000FF</p><p>Purple（紫色）</p><p>#800080</p><p>Fuchsia（樱桃色）</p><p>#FF00FF</p><p>Red（红色）</p><p>#FF0000</p><p>Gray（灰色）</p><p>#808080</p><p>Silver（银色）</p><p>#C0C0C0</p><p>Green（绿色）</p><p>#00FF00</p><p>Teal（茶色）</p><p>#008080</p><p>Lime（石灰色）</p><p>#008000</p><p>White（白色）</p><p>#FFFFFF</p><p>Maroon（褐红色）</p><p>#800000</p><p>Yellow（黄色）</p><p>#FFFF00</p></li></ul></li><li><p>浏览器将采用默认的设置</p></li><li><p>Bgcolor —— 白色或灰色</p><ul><li><p>text —— 黑色</p></li><li><p>link —— 蓝色</p></li><li><p>vlink —— 紫色</p></li><li><p>alink —— 红 色</p></li></ul></li><li><p>例 1：</p></li></ul><blockquote><p>&lt;BODY bgcolor=&quot;#000000&quot; text=&quot;#FFFFFF&quot; link=&quot;#999999&quot;</p></blockquote><blockquote><p>vlink=&quot;#CCCCCC&quot; alink=&quot;#666666&quot;&gt;</p></blockquote><ul><li>例 2：</li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt; 背景图案示例 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY background=&quot;background.jpg&quot; &gt;</p></blockquote><p>背景图案示例</p><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/Viq4BjCkw5SK6Ha.png" alt="3.png" /></p><p><img data-src="https://s2.loli.net/2022/10/23/WLBlesVoZQbiGrP.png" alt="4.png" /></p><h2 id="注释语句"><a class="anchor" href="#注释语句">#</a> 注释语句</h2><blockquote><p>注释语句又称为注释标记，这些标记在浏览网页时不会显示，只是<br />在编辑文件时可以看到。适当使用注释语句，可以让网页的维护和更<br />新变得十分方便。</p></blockquote><p>注释语句的格式：</p><blockquote><p>&lt;!-- 这中间是注释的内容 --&gt;</p></blockquote><blockquote><p>例子：</p></blockquote><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt; 网页标题 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt; 正文，正文，正文 &lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;!-- 本行内容并不在浏览器中显示 --&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><blockquote><p>注释可插入在 Web 页的任何位置</p></blockquote><blockquote><p> <strong>小结</strong></p></blockquote><blockquote><p>HTML 是表示网页的一种规范，它通过标记符定义了网页内容的显</p></blockquote><blockquote><p>示。</p></blockquote><blockquote><p>最基本的 HTML 标记符包括：</p></blockquote><blockquote><p>HTML 标记符 &lt;HTML&gt; 和 &lt;/HTML&gt;</p></blockquote><blockquote><p>首部标记 &lt;HEAD&gt; 和 &lt;/HEAD&gt;</p></blockquote><blockquote><p>正文标记 &lt;BODY&gt; 和 &lt;/BODY&gt;。</p></blockquote><blockquote><p>BODY 标记符包括一些常用属性，用于控制网页的基本显示效果。</p></blockquote><h1 id="html基本元素"><a class="anchor" href="#html基本元素">#</a> HTML 基本元素</h1><h2 id="文字"><a class="anchor" href="#文字">#</a> 文字</h2><blockquote><p>文字设置：一般包括文字格式和文字样式的处理，文件格式即文</p></blockquote><blockquote><p>字的位置、段落等属性，文字的样式指文字的颜色、字体大小等<br />。常用的文字处理标记 ：</p></blockquote><ul><li><p>&lt;p&gt; 和 &lt;/p &gt; 标记</p></li><li><p>&lt;br&gt; 标记</p></li><li><p>&lt;hn&gt; 和 &lt;/hn &gt; 标记</p></li><li><p>&lt;font&gt; 和 &lt;/font &gt; 标记</p></li><li><p>文字样式标记 (如 &lt; b&gt;&lt;/b&gt;)</p></li></ul><h3 id="段落标记符-p-p"><a class="anchor" href="#段落标记符-p-p">#</a> 段落标记符 ——&lt;P&gt; &lt; /P &gt;</h3><ul><li><p>将文档划分为段落</p></li><li><p>可以省略 &lt;/P&gt;</p></li></ul><h3 id="换行标记符br"><a class="anchor" href="#换行标记符br">#</a> 换行标记符 ——&lt;BR&gt;</h3><ul><li>在文档中强制断行</li></ul><h3 id="区别"><a class="anchor" href="#区别">#</a> 区别：</h3><ul><li><p>&lt;P&gt; 不能产生多个空行，而 &lt; BR &gt; 则可在内容之间设置多个空行，</p><p>即形成空白</p></li><li><p>&lt;P&gt; 是断段，而 &lt; BR &gt; 是断行</p><p>例子：</p></li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt; &lt;TITLE&gt;&lt;P&amp;gt; 与 &amp; lt;BR &gt; 的用法 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>&lt;P&gt; 第一段</p></blockquote><blockquote><p>&lt;P&gt; 第二段，用 &lt; BR&amp;gt; 标记符控制断行 &lt; BR&gt;</p></blockquote><blockquote><p>仍然为第二段，但此行已经断开</p></blockquote><blockquote><p>&lt;P&gt; 第三段</p></blockquote><blockquote><p>&lt;P&gt; 第四段，多个 &lt; P&amp;gt;<br /> 标记符并没有起到产生多个空行的效果 &lt;P&gt;&lt;P&gt;&lt;P&gt;&lt;P&gt;</p></blockquote><blockquote><p>但多个 &lt;BR&gt; 标记符可以产生多个空行效果</p></blockquote><blockquote><p>&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;</p></blockquote><blockquote><p>&lt;P&gt; 此为最后一段</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/XpmNCqkWOQdPhnM.png" alt="5.png" /></p><h3 id="标题标记符hnhn"><a class="anchor" href="#标题标记符hnhn">#</a> 标题标记符 ——&lt;Hn&gt;&lt;/Hn&gt;</h3><ul><li><p>标识文档中的标题和副标题</p></li><li><p>浏览器在解释标题标记符时，会自动改变文字的大小，并且将字</p></li></ul><blockquote><p>体改为黑体，同时将内容设为一个段落</p></blockquote><ul><li><p>n 是 1 至 6 的数字，&lt;H1&gt; 表示最大的标题，&lt;H6 &gt; 表示最小的标题</p><ul><li>例子：</li></ul></li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;&lt;TITLE &gt; 标题效果 &lt;/TITLE&gt;&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>&lt;H1&gt; 此为一级标题 &lt;/H1&gt;</p></blockquote><blockquote><p>&lt;H2&gt; 此为二级标题 &lt;/H2&gt;</p></blockquote><blockquote><p>&lt;H3&gt; 此为三级标题 &lt;/H3&gt;</p></blockquote><blockquote><p>&lt;H4&gt; 此为四级标题 &lt;/H4&gt;</p></blockquote><blockquote><p>&lt;H5&gt; 此为五级标题 &lt;/H5&gt;</p></blockquote><blockquote><p>&lt;H6&gt; 此为六级标题 &lt;/H6&gt;</p></blockquote><blockquote><p>&lt;P&gt; 此为正常文本 &lt;/P&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><h3 id="字体控制标记符-font-font"><a class="anchor" href="#字体控制标记符-font-font">#</a> 字体控制标记符 ——&lt;FONT&gt; &lt; /FONT&gt;</h3><ul><li><p>size 属性 —— 控制字符的大小 size=&quot; &quot;</p><ul><li><p>字号从 1~7, 字号越大，默认值为 3</p></li><li><p>color 属性 —— 控制字符的颜色 color=&quot; &quot;</p><ul><li>使用颜色名称或十六进制值指定颜色</li></ul></li></ul></li><li><p>face 属性 —— 指定字体样式 face =&quot; &quot;</p><ul><li><p>常用的英文字体有 “Times New Roman”、“Arial” 等</p><ul><li>常用的中文字体有 “宋体”、“楷体” 等</li></ul></li></ul></li><li><p>例子：</p></li></ul><blockquote><p>&lt;FONT size=&quot;2&quot; face=&quot;宋体&quot; color=&quot;#0000ff&quot;&gt; 例子一 &lt;/FONT&gt;</p></blockquote><blockquote><p>&lt;FONT color=&quot;green&quot;&gt; 例子二 &lt;/FONT&gt;</p></blockquote><blockquote><p>&lt;FONT face=&quot;Arial Black，楷体&quot; size=+1&gt; 例子三 &lt;/FONT&gt;</p></blockquote><blockquote><p>&lt;FONT face=“隶书” color=“yellow” size=“7”&gt; 例子四</p></blockquote><blockquote><p>&lt;/FONT&gt;</p></blockquote><h3 id="文字样式"><a class="anchor" href="#文字样式">#</a> 文字样式</h3><ul><li><p>指标记符本身就说明了所修饰文字的效果的文字样式</p><ul><li><p>使用方法：将设置格式的字符括在标记符之间</p></li><li><p>由于带有超链接的文本下通常包含下划线，因此下划线格式易让人产生误解，建议使用时慎重</p></li><li><p>常见的文字样式</p></li></ul></li></ul><table><thead><tr><th>标记</th><th>功能</th><th>标记</th><th>功能</th><th></th><th></th></tr></thead><tbody><tr><td>&lt;B&gt;</td><td>&lt;/B&gt;</td><td>粗体</td><td>&lt;STRIKE&gt; &lt;/STRIKE&gt;</td><td>删除线</td><td></td></tr><tr><td>&lt;BIG&gt;</td><td>&lt;/BIG&gt;</td><td>大字体</td><td>&lt;SUB&gt;</td><td>&lt;/SUB&gt;</td><td>下标</td></tr><tr><td>&lt;I&gt;</td><td>&lt;/I&gt;</td><td>斜体</td><td>&lt;SUP&gt;</td><td>&lt;/SUP&gt;</td><td>上标</td></tr><tr><td>&lt;S&gt;</td><td>&lt;/S&gt;</td><td>删除线</td><td>&lt;TT&gt;</td><td>&lt;/TT&gt;</td><td>固定宽度字体</td></tr><tr><td>&lt;SMALL&gt;  &lt;/SMALL&gt;</td><td>小字体</td><td>&lt;U&gt;</td><td>&lt;/U&gt;</td><td>下划线</td><td></td></tr></tbody></table><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt; 物理字符样式效果示例 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;B &gt; 此处为粗体显示文本 &lt;/B&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;BIG &gt; 此处为大字体文本 &lt;/BIG&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;SMALL &gt; 此处为小字体文本 &lt;/SMALL&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;I &gt; 此处为斜体文本 &lt;/I&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;TT &gt; 此处为等宽字体文本 &lt;/TT&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;U &gt; 此处为下划线文本 &lt;/U&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;S &gt; 此处为使用 &lt; S&amp;gt; 标记设置的删除线文本 &lt;/S&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;STRIKE &gt; 此处为使用 &lt; STRIKE&amp;gt; 标记设置的删除线文本</p></blockquote><blockquote><p>&lt;/STRIKE&gt;</p></blockquote><blockquote><p>&lt;P&gt; 此处为上标示例：x&lt;SUP&gt;2&lt;/SUP&gt; + y&lt;SUP&gt;2&lt;/SUP&gt; =<br />R&lt;SUP&gt;2&lt;/SUP&gt;</p></blockquote><blockquote><p>&lt;P&gt; 此处为下标示例：H&lt;SUB&gt;2&lt;/SUB&gt;SO&lt;SUB&gt;4&lt;/SUB&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><blockquote><p><img data-src="https://s2.loli.net/2022/10/23/DUTBpfI8SYV6sMw.png" alt="6.png" /></p></blockquote><h2 id="列表"><a class="anchor" href="#列表">#</a> 列表</h2><ul><li><p>在 HTML 中，可以使用符号列表或排序列表标记，以使得文档更具</p><p>有条理性。</p></li><li><p>符号列表：符号列表又称为无序列表，每一个列表项目的前面可以</p></li></ul><blockquote><p>是空心原点、实心方块或实心圆点等符号。具体用法如下：</p></blockquote><blockquote><p>&lt;ul type=&quot;Square&quot;&gt;</p></blockquote><blockquote><p>&lt;li&gt; 列表项</p></blockquote><blockquote><p>&lt;/ul&gt;</p></blockquote><table><thead><tr><th><strong>值</strong></th><th><strong>type 属性的含义</strong></th></tr></thead><tbody><tr><td>disc</td><td>实心圆，通常是非嵌套列表的默认值</td></tr><tr><td>circle</td><td>空心圆，通常是嵌套列表的默认值</td></tr><tr><td>square</td><td>实心或空心的方块，取决于浏览器</td></tr></tbody></table><blockquote><p>例 子：</p></blockquote><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;&lt;TITLE &gt; 无序列表示例 &lt;/TITLE&gt;&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>默认无序列表：</p></blockquote><blockquote><p>&lt;UL&gt;</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 1</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 2</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 3</p></blockquote><blockquote><p>&lt;/UL&gt;</p></blockquote><blockquote><p>使用方块作为列表项标记的无序列表：</p></blockquote><p>&lt;UL type=&quot;square&quot;&gt;</p><p>&lt;LI&gt; 列表项 1</p><blockquote><p>&lt;LI&gt; 列表项 2</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 3</p></blockquote><blockquote><p>&lt;/UL&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><blockquote><p><img data-src="https://s2.loli.net/2022/10/23/Jy1l8wkFN7hCagd.png" alt="7.png" /></p></blockquote><h2 id="列表-2"><a class="anchor" href="#列表-2">#</a> 列表</h2><blockquote><p>排序列表：与符号列表不同，每个列表项目前面都是一个编号字符<br />，可以是数字也可以是字母。具体用法如下：</p></blockquote><blockquote><p>&lt;ol type=&quot;1&quot; start=&quot;1&quot;&gt;</p></blockquote><blockquote><p>&lt;li&gt; 列表项</p></blockquote><blockquote><p>&lt;/ol&gt;</p></blockquote><table><thead><tr><th><strong>值</strong></th><th><strong>type 属性的值含义</strong></th></tr></thead><tbody><tr><td>1</td><td>阿拉伯数字：1、2、3 等，此项为默认值</td></tr><tr><td>A</td><td>大写字母：A、B、C 等</td></tr><tr><td>a</td><td>小写字母：a、b、c 等</td></tr><tr><td>I</td><td>大写罗马数字：I、II、III、IV 等</td></tr><tr><td>i</td><td>小写罗马数字：i、ii、iii、iv 等</td></tr></tbody></table><blockquote><p>例子：</p></blockquote><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;</p></blockquote><blockquote><p>&lt;TITLE&gt; 有序列表示例 &lt;/TITLE&gt;</p></blockquote><blockquote><p>&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>用大写罗马字母表示的有序列表：</p></blockquote><blockquote><p>&lt;OL type=&quot;I&quot;&gt;</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 1 &lt;LI &gt; 列表项 2 &lt;LI &gt; 列表项 3</p></blockquote><blockquote><p>&lt;/OL&gt;</p></blockquote><blockquote><p>起始数字为 3 的有序列表：</p></blockquote><blockquote><p>&lt;OL start=&quot;3&quot;&gt;</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 1 &lt;LI &gt; 列表项 2 &lt;LI &gt; 列表项 3</p></blockquote><blockquote><p>&lt;/OL&gt;</p></blockquote><blockquote><p>编号不连续的有序列表</p></blockquote><blockquote><p>&lt;OL&gt;</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 1 &lt;LI &gt; 列表项 2 &lt;LI value=&quot;5&quot;&gt; 列表项 3</p></blockquote><blockquote><p>&lt;/OL&gt;</p></blockquote><blockquote><p>变换了数字样式的有序列表</p></blockquote><blockquote><p>&lt;OL&gt;</p></blockquote><blockquote><p>&lt;LI&gt; 列表项 1 &lt;LI &gt; 列表项 2 &lt;LI type=&quot;A&quot;&gt; 列表项 3</p></blockquote><blockquote><p>&lt;/OL&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/jVAUbZrmCnN2fuk.png" alt="8.png" /></p><h2 id="图像"><a class="anchor" href="#图像">#</a> 图像</h2><blockquote><p>在 HTML 中，用 &lt;img&gt; 标记插入图片。这是一个单独标记，用法如下：</p></blockquote><ul><li>&lt;img src=&quot;flower.jpg&quot; width=&quot;270&quot; height=&quot;167&quot; border=&quot;1&quot; alt=&quot;</li></ul><blockquote><p>鲜花 &quot;align=&quot;left&quot; &gt;</p></blockquote><blockquote><p>src</p></blockquote><blockquote><p>指定要显示的图像的文件名 (URL)</p></blockquote><blockquote><p>alt</p></blockquote><blockquote><p>指定当图像无法显示或加载时显示的文字</p></blockquote><blockquote><p>dynsrc</p></blockquote><blockquote><p>动态源，指定到视频剪辑或 VRMl 文件的 URL</p></blockquote><blockquote><p>border</p></blockquote><blockquote><p>整数，图像边框的宽度</p></blockquote><blockquote><p>align</p></blockquote><blockquote><p>对齐方式：left、 right top、middle、bottom</p></blockquote><blockquote><p>height</p></blockquote><blockquote><p>整数，图像的高度</p></blockquote><blockquote><p>设置图像的高度和宽度</p></blockquote><blockquote><p>width</p></blockquote><blockquote><p>整数，图像的宽度</p></blockquote><blockquote><p>hspace</p></blockquote><blockquote><p>像素，水平方向的空</p></blockquote><blockquote><p>白</p></blockquote><blockquote><p>设置图像周围的空白</p></blockquote><blockquote><p>vspace</p></blockquote><blockquote><p>像素，垂直方向的空</p></blockquote><blockquote><p>白</p></blockquote><h2 id="表格"><a class="anchor" href="#表格">#</a> 表格</h2><blockquote><p>表格有两个主要功能：</p></blockquote><ul><li><p>一是用来展示文字或图像等内容；</p></li><li><p>二是用来实现版面布局，使网页更规范更美观。</p></li></ul><blockquote><p>表格是可以嵌套使用的。</p></blockquote><blockquote><p><img data-src="https://s2.loli.net/2022/10/23/fRHgc7JsF5YVWlE.png" alt="9.png" /></p></blockquote><blockquote><p>&lt;Table&gt; &lt;/ Table &gt;</p></blockquote><blockquote><p>表格</p></blockquote><blockquote><p>&lt;Caption&gt; &lt;/Caption&gt;</p></blockquote><blockquote><p>表格标题</p></blockquote><blockquote><p>&lt;Th&gt; &lt;/Th&gt;</p></blockquote><blockquote><p>行列标题数据</p></blockquote><blockquote><p>表格的标记</p></blockquote><h3 id="table与table标记"><a class="anchor" href="#table与table标记">#</a> &lt;table&gt; 与 &lt;/table &gt; 标记</h3><blockquote><p>&lt;Td&gt; &lt;/Td&gt;</p></blockquote><blockquote><p>普通数据</p></blockquote><blockquote><p>&lt;Tr&gt; &lt;/Tr&gt;</p></blockquote><blockquote><p>表格的行</p></blockquote><ul><li><p>&lt;table&gt; 标记用来声明表格，&lt;table&gt; 和 &lt;/table&gt;<br /> 标记之间就是整个表格的内容。</p><ul><li>该标记有许多属性用来设置表格背景、表格边框宽度等</li></ul></li><li><p>bgcolor</p></li><li><p>background</p></li><li><p>width 、height</p></li><li><p>border</p></li><li><p>align</p></li></ul><h3 id="caption与caption标记"><a class="anchor" href="#caption与caption标记">#</a> &lt;caption&gt; 与 &lt;/caption &gt; 标记</h3><ul><li>该标记用来设置表格的标题，它有 align 和 valign 两个属性，其中 align<br /> 属性表示水平对齐方式，与 &lt;table&gt; 标记相似。</li></ul><h3 id="tr和tr标记"><a class="anchor" href="#tr和tr标记">#</a> &lt;tr&gt; 和 &lt;/tr &gt; 标记</h3><ul><li><p>表格是由行和列组成的，一个 &lt;tr&gt; 标记就表示一行</p><ul><li><p>&lt;tr&gt; 标记事实上也有 bgcolor、background、width、height 和 align</p><p>属性，其属性及属性值和 &lt;table&gt; 标记类似，只不过是针对该行进行设置的。</p></li><li><p>align 和 valign 属性：align 属性表示单元格内容在单元格中的水平</p><p>对齐方式；valign 属性则表示垂直对齐方式。</p></li></ul></li></ul><h3 id="td与td标记"><a class="anchor" href="#td与td标记">#</a> &lt;td&gt; 与 &lt;/td &gt; 标记</h3><ul><li><p>一个 &lt;td&gt; 标记表示一列，准确地说，是一行中的一列，也就是一</p><p>个单元格。</p></li><li><p>该标记也有 bgcolor、background、width、height、align、valign 属</p><p>性，其属性及属性值也与 &lt;table&gt; 标记和 &lt; tr &gt; 标记类似，只不过是<br />针对该单元格进行设置的。</p><ul><li>&lt;td&gt; 标记还有两个非常重要的属性：rowspan 和 colspan</li></ul></li><li><p>rowspan 指定当前单元格跨越行的数量</p><ul><li>colspan 指定当前单元格跨越列的数量</li></ul></li></ul><h3 id="th与th标记"><a class="anchor" href="#th与th标记">#</a> &lt;th&gt; 与 &lt;/th &gt; 标记</h3><ul><li><p>该标记用来设置一个单元格为标题栏，用法和 &lt;td&gt; 标记相似，<br />只是自动将单元格内容以粗体显示 。</p><p>例子</p></li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;&lt;TITLE &gt; 表格示例 &lt;/TITLE&gt;&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>&lt;TABLE &gt;</p></blockquote><blockquote><p>&lt;CAPTION&gt;&lt;H2 &gt; 课程表 &lt; H2&gt;&lt;/CAPTION&gt;</p></blockquote><blockquote><p>&lt;TR&gt;</p></blockquote><blockquote><p>&lt;TH&gt;&lt;IMG src=&quot;fire.gif&quot;&gt;</p></blockquote><blockquote><p>&lt;TH&gt; 星期一 &lt; TH &gt; 星期二 &lt; TH &gt; 星期三 &lt; TH &gt; 星期四 &lt; TH &gt; 星期五</p></blockquote><blockquote><p>&lt;TR&gt;</p></blockquote><blockquote><p>&lt;TH&gt; 第 1 大节 &lt; TD &gt; 数学 &lt; TD &gt; 英语 &lt; TD &gt; 数学 &lt; TD &gt; 英语 &lt; TD &gt; 哲学</p></blockquote><blockquote><p>&lt;TR&gt;</p></blockquote><blockquote><p>&lt;TH&gt; 第 2 大节 &lt; TD &gt; 物理 &lt; TD &gt; 计算机 &lt; TD &gt; 计算机 &lt; TD&gt;&lt;TD &gt; 计算机</p></blockquote><blockquote><p>&lt;TR&gt;</p></blockquote><blockquote><p>&lt;TH&gt; 第 3 大节 &lt; TD &gt; 计算机 &lt; TD&gt;&lt;TD &gt; 英语 &lt; TD &gt; 计算机 &lt; TD&gt;</p></blockquote><blockquote><p>&lt;/TABLE&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/xFce4HVU2fSBhNn.png" alt="10.png" /></p><h2 id="超链接"><a class="anchor" href="#超链接">#</a> 超链接</h2><ul><li><p>超链接的作用：</p></li><li><p>实现从一个页面链接到另一个页面的功能。</p></li><li><p>超链接的用法如下：</p></li><li><p>&lt;a href=&quot;<span class="exturl" data-url="aHR0cDovL3d3dy5zb2h1LmNvbS8=">http://www.sohu.com</span>&quot;&gt; 搜狐 &lt;/a&gt;</p></li><li><p>超链接可以实现链接到另一个文件、邮箱、普通压缩文件等。</p></li></ul><h2 id="字符实体"><a class="anchor" href="#字符实体">#</a> 字符实体</h2><ul><li><p>为什么要使用字符实体？</p></li><li><p>有些字符是无法在 HTML 中直接显示的 ，那么就要用到字符实体来代替显示。</p></li><li><p>实体的组成：一般包括三个部分，一个 and 符号 (&amp;)，一个字符实体</p><p>名或者实体号和一个封号 (😉。</p></li><li><p>常用字符实体：</p></li></ul><table><thead><tr><th>特殊字符</th><th>数字代码</th><th>代码名称</th></tr></thead><tbody><tr><td>&amp;</td><td>&amp;#38;</td><td>&amp;</td></tr><tr><td>&lt;  &gt;</td><td>&amp;#60;  &amp;#62;</td><td>&lt;  &gt;</td></tr><tr><td>空格</td><td>&amp;#160;</td><td> </td></tr></tbody></table><h1 id="html高级元素"><a class="anchor" href="#html高级元素">#</a> HTML 高级元素</h1><h2 id="表单"><a class="anchor" href="#表单">#</a> 表单</h2><ul><li><p>表单（Form）：就是将要填写的文本框、下拉列表框等元素组合在</p><p>一起就形成了表单。</p></li></ul><p><img data-src="https://s2.loli.net/2022/10/23/R23DNaFCd7mnJlH.png" alt="11.png" /></p><ul><li><p>表单的结构：</p><p>&lt;表单标签符&gt;</p><p>&lt;控件标签符 1&gt; &lt;/ 控件标签符 1&gt;</p><p>&lt;控件标签符 2&gt; &lt;/ 控件标签符 2&gt;</p><p>&lt;/ 表单标签符&gt;</p><p>例子：</p></li></ul><blockquote><p>&lt;HTML&gt;</p></blockquote><blockquote><p>&lt;HEAD&gt;&lt;TITLE &gt; 单行文本框和口令框示例 &lt;/TITLE&gt;&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;</p></blockquote><blockquote><p>&lt;DIV align=&quot;center&quot;&gt;</p></blockquote><blockquote><p>&lt;H2&gt; 表单 —— 单行文本框和口令框 &lt;/H2&gt;</p></blockquote><blockquote><p>&lt;HR&gt;</p></blockquote><blockquote><p>&lt;FORM&gt;</p></blockquote><blockquote><p>请输入您的姓名：</p></blockquote><blockquote><p>&lt;INPUT name=&quot;name&quot; value=&quot;your name pls&quot; size=&quot;30&quot;&gt;&lt;BR&gt;</p></blockquote><blockquote><p>请输入您的密码：</p></blockquote><blockquote><p>&lt;INPUT type=&quot;password&quot; name=&quot;pwd&quot; value=&quot;pwd&quot; size=&quot;30&quot;&gt;&lt;P&gt;</p></blockquote><blockquote><p>&lt;INPUT type=&quot;submit&quot; name=&quot;submit_button&quot; value=&quot;提交&quot;&gt;</p></blockquote><blockquote><p>&lt;/FORM&gt;</p></blockquote><blockquote><p>&lt;HR&gt;</p></blockquote><blockquote><p>&lt;/DIV&gt;</p></blockquote><blockquote><p>&lt;/BODY&gt;</p></blockquote><blockquote><p>&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/W4kpTutgaoPO16K.png" alt="12.png" /></p><blockquote><p>表单的主要标记</p></blockquote><h3 id="form与form标记"><a class="anchor" href="#form与form标记">#</a> &lt;form&gt; 与 &lt;/form &gt; 标记</h3><ul><li><p>该标记用于定义一个表单，任何一个表单都是以 &lt;form&gt; 开始，以 &lt;/form&gt; 结束。,<br /> 在其中包含了一些表单元素，如文本框、按钮、下拉列表框等。</p><ul><li>属性主要有：</li></ul></li><li><p>name</p></li><li><p>action</p></li><li><p>method</p></li></ul><h3 id="form与form标记属性"><a class="anchor" href="#form与form标记属性">#</a> &lt;form&gt; 与 &lt;/form &gt; 标记属性</h3><ul><li><p>提交 ——method 属性</p><ul><li><p>get 方法：在 URL 的末尾附加要向服务器发送的信息。</p><p>如：</p></li></ul></li></ul><blockquote><p><span class="exturl" data-url="aHR0cDovL3NvbWV3aGVyZS5uZXQvbG9naW4ucGhwP3VzZXI9eHh4JmFtcDtwYXNzd29yZD14eHh4">http://somewhere.net/login.php?user=xxx&amp;password=xxxx</span> xx</p></blockquote><ul><li><p>post 方法：将发送给服务器的表单数据作为一个数据体发</p><p>送的。</p></li><li><p>处理 ——action 属性</p><ul><li><p>提供处理表单的程序的地址，程序存放在 Web 服务器上</p><ul><li>程序常用的语言有 ASP、PHP、JSP、Perl 等</li></ul></li></ul></li></ul><h3 id="input与input标记"><a class="anchor" href="#input与input标记">#</a> &lt;input&gt; 与 &lt;/input &gt; 标记</h3><ul><li><p>该标记用于在表单中定义单行文本框、密码框、单选框、复选框、按钮等表单元素。不同的元素有不同的属性。</p><ul><li><p>&lt;input&gt; 标记的常用属性 ：</p><ul><li><p>type （text 、password 、radio 、checkbox 、submit 、</p><p>image 等 ）</p></li></ul></li></ul></li><li><p>name</p></li><li><p>value</p></li></ul><h3 id="select与select标记"><a class="anchor" href="#select与select标记">#</a> &lt;select&gt; 与 &lt;/select &gt; 标记</h3><ul><li><p>该标记用来定义一个列表框，其中的一个 &lt;option&gt; 标记就是列表框中的一项。</p><ul><li>主要属性：</li></ul></li><li><p>name</p></li><li><p>size</p></li><li><p>multiple</p></li><li><p>value</p></li><li><p>selected</p></li></ul><blockquote><p>例子：</p></blockquote><blockquote><p>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE &gt; 选项菜单示例 &lt;/TITLE&gt;&lt;/HEAD&gt;</p></blockquote><blockquote><p>&lt;BODY&gt;&lt;H2 align=&quot;center&quot;&gt; 表单 —— 选项菜单示例 &lt;/H2&gt;&lt;HR&gt;</p></blockquote><blockquote><p>&lt;FORM&gt;</p></blockquote><blockquote><p>请输入您的姓名：&lt;INPUT&gt;&lt;P&gt;</p></blockquote><blockquote><p>请选择您最喜欢的影视明星：&lt;SELECT name=&quot;yingshi&quot;&gt;</p></blockquote><p>&lt;OPTION&gt; 周星驰 &lt;OPTION &gt; 周润发 &lt;OPTION &gt; 刘德华</p><blockquote><p>&lt;OPTION&gt; 其他</p></blockquote><blockquote><p>&lt;/SELECT&gt;</p></blockquote><blockquote><p>&lt;P&gt; 请选择您喜欢的周星驰作品（按住 &quot;Ctrl&quot; 或 &quot;Shift&quot; 可以多选）：</p></blockquote><blockquote><p>&lt;BR&gt;</p></blockquote><blockquote><p>&lt;SELECT name=&quot;xingxing&quot; multiple size=&quot;4&quot;&gt;</p></blockquote><p>&lt;OPTION&gt; 鹿鼎记 &lt;OPTION &gt; 少林足球</p><blockquote><p>&lt;OPTION&gt; 大话西游 &lt;OPTION &gt; 喜剧之王</p></blockquote><blockquote><p>&lt;OPTION&gt; 其他</p></blockquote><blockquote><p>&lt;/SELECT&gt;&lt;P&gt;</p></blockquote><blockquote><p>&lt;INPUT type=&quot;image&quot; src=&quot;mybutton.gif&quot;&gt;</p></blockquote><blockquote><p>&lt;/FORM&gt;</p></blockquote><blockquote><p>&lt;HR&gt;&lt;/BODY&gt;&lt;/HTML&gt;</p></blockquote><blockquote><p><img data-src="https://s2.loli.net/2022/10/23/ZOKBefIk4Vlyx1q.png" alt="13.png" /></p></blockquote><h3 id="textarea与textarea标记"><a class="anchor" href="#textarea与textarea标记">#</a> &lt;textarea&gt; 与 &lt;/textarea &gt; 标记</h3><ul><li>该标记用于定义一个多行文本框（也叫文本区域），常用于需要</li></ul><blockquote><p>输入大量文字内容的网页中，如留言板、BBS 等。</p></blockquote><ul><li><p>主要属性：</p></li><li><p>name</p></li><li><p>rows</p></li><li><p>cols</p></li><li><p>多行文本框和单行文本框略有不同，它没有 value 属性，&lt;textarea&gt;</p><p>和 &lt;/textarea&gt; 之间的内容实际上就是它的值。例 子：</p><p>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE &gt; 多行文本框示例 &lt;/TITLE&gt;&lt;/HEAD&gt;</p><p>&lt;BODY&gt;&lt;H2 align=&quot;center&quot;&gt; 表单 —— 多行文本框 &lt;/H2&gt;&lt;HR&gt;</p></li></ul><blockquote><p>&lt;FORM&gt;</p></blockquote><blockquote><p>请输入您的姓名：&lt;INPUT&gt;&lt;P&gt;</p></blockquote><blockquote><p>请在下框内输入您的宝贵意见：&lt;BR&gt;</p></blockquote><blockquote><p>&lt;TEXTAREA name=&quot;comments&quot; rows=&quot;5&quot; cols=&quot;60&quot;&gt; 请多指教！</p></blockquote><blockquote><p>&lt;/TEXTAREA&gt;</p></blockquote><blockquote><p>&lt;P&gt;&lt;INPUT type=&quot;image&quot; src=&quot;mybutton.gif&quot;&gt;</p></blockquote><blockquote><p>&lt;/FORM&gt;&lt;HR&gt;&lt;/BODY&gt;&lt;/HTML&gt;</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/jAYCWZL7igF5wrG.png" alt="14.png" /></p><h2 id="框架网页"><a class="anchor" href="#框架网页">#</a> 框架网页</h2><blockquote><p>所谓框架网页，就是指在一个浏览器窗口内同时显示几个不同的</p></blockquote><blockquote><p>HTML 文档。如图所示。</p></blockquote><p><img data-src="https://s2.loli.net/2022/10/23/ugOFMZylPaAdwsG.png" alt="15.png" /></p><blockquote><p>框架标记符及格式：</p></blockquote><p>&lt;FRAMESET &gt;</p><p>&lt;FRAME &gt;</p><p>&lt;FRAME&gt;</p><blockquote><p>&lt;NOFRAMES&gt;</p></blockquote><blockquote><p>&lt;/NOFRAMES&gt;</p></blockquote><blockquote><p>&lt;/FRAMESET&gt;</p></blockquote><blockquote><p>其中，&lt;FRAMESET<br /> &gt; 和 &lt;/FRAMESET&gt; 为框架集标记符，是框架容器，框架必须定义在框架集之内。&lt;FRAME<br /> &gt; 和 &lt;FRAME&gt; 为框架标记符，定义一个框架，必须包含在 &lt;FRAMESET &gt;<br /> 标记符之中，也可以嵌套 &lt;FRAMESET&gt;。&lt;NOFRAMES&gt; 和 &lt;/NOFRAMES &gt; 定义</p></blockquote><blockquote><p>浏览器不支持框架技术时所要显示的替代内容，必须包含在</p></blockquote><blockquote><p>&lt;FRAMESET&gt; 标记符之中，是可选项。框架的重要标记：</p></blockquote><h3 id="frameset与frameset标记"><a class="anchor" href="#frameset与frameset标记">#</a> &lt;frameset&gt; 与 &lt;/frameset &gt; 标记</h3><ul><li><p>该标记就用来定义框架的结构，是左右还是上下结构。</p></li><li><p>属性如下：</p></li><li><p>cols</p></li><li><p>rows</p></li><li><p>frameborder</p></li><li><p>border</p></li><li><p>bordercolor</p></li></ul><h3 id="frame标记"><a class="anchor" href="#frame标记">#</a> &lt;frame&gt; 标记</h3><ul><li><p>一个 &lt;frame&gt; 标记表示一个框架窗口，&lt;frame &gt; 标记的个数应该与</p><p>框架数相当。</p></li><li><p>属性如下：</p></li><li><p>name</p></li><li><p>src</p></li><li><p>scrolling</p></li><li><p>noresize</p></li><li><p>用 &lt;a&gt; 标记和 &lt; base &gt; 标记中的 target 属性（有 left、right 等），可以</p><p>控制超链接在任意框架或窗口中打开。</p></li></ul><h1 id="其他元素"><a class="anchor" href="#其他元素">#</a> 其他元素</h1><ul><li>下面用表格列出较为常用的其他标记 ：</li></ul><p><img data-src="https://s2.loli.net/2022/10/23/vYyitrjD8gHEXon.png" alt="16.png" /></p><h1 id="本章小结"><a class="anchor" href="#本章小结">#</a> 本章小结</h1><ul><li><p>本章的重点是 HTML 的主要标记及标记属性的使用。</p></li><li><p>其中表格、表单、框架的设计尤为重要。</p></li><li><p>最重要的还是要多动手练习！</p></li></ul><blockquote><p>_</p></blockquote>]]></content>
    
    
    <summary type="html">HTML基础知识。</summary>
    
    
    
    <category term="计算机科学" scheme="http://example.com/categories/computer-science/"/>
    
    <category term="WEB前端技术" scheme="http://example.com/categories/computer-science/course-1/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown使用技巧</title>
    <link href="http://example.com/2021/08/24/computer-science/course-2/markdown-skills/"/>
    <id>http://example.com/2021/08/24/computer-science/course-2/markdown-skills/</id>
    <published>2021-08-24T08:29:40.791Z</published>
    <updated>2022-10-23T14:43:53.780Z</updated>
    
    <content type="html"><![CDATA[<p>自从在 GitHub 玩耍，接触到 Markdown 之后，就一发不可收拾，在各种文档编辑上，有条件用 Markdown 的尽量用，不能用的创造条件也要用 ——README、博客、公众号、接口文档等等全都是，比如当前这篇文章就是用 Markdown 编辑而成。</p><p>这几年也发现越来越多的网站和程序提供了对 Markdown 的支持，从最初接触的 GitHub、Jekyll，到简书、掘金、CSDN 等等，由此也从别人做得好的文档中，学到了一些技巧，所以本文不是对 Markdown 基础语法的介绍，而是一些相对高级、能将 Markdown 玩出更多花样的小技巧。</p><p><em>注：如下技巧大多是利用 Markdown 兼容部分 HTML 标签的特性来完成，不一定在所有网站和软件里都完全支持，主要以 GitHub 支持为准。</em></p><h2 id="在表格单元格里换行"><a class="anchor" href="#在表格单元格里换行">#</a> 在表格单元格里换行</h2><p>借助于 HTML 里的  <code>&lt;br /&gt;</code>  实现。</p><p>示例代码：</p><pre><code>| Header1 | Header2                          ||---------|----------------------------------|| item 1  | 1. one&lt;br /&gt;2. two&lt;br /&gt;3. three |</code></pre><p>示例效果：</p><table><thead><tr><th>Header1</th><th>Header2</th></tr></thead><tbody><tr><td>item 1</td><td>1. one&lt;br /&gt;2. two&lt;br /&gt;3. three</td></tr></tbody></table><h2 id="图文混排"><a class="anchor" href="#图文混排">#</a> 图文混排</h2><p>使用  <code>&lt;img&gt;</code>  标签来贴图，然后指定  <code>align</code>  属性。</p><p>示例代码：</p><pre><code>&lt;img align=&quot;right&quot; src=&quot;https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png&quot; alt=&quot;demo.png&quot;/&gt;这是一个示例图片。图片显示在 N 段文字的右边。N 与图片高度有关。刷屏行。刷屏行。到这里应该不会受影响了，本行应该延伸到了图片的正下方，所以我要足够长才能确保不同的屏幕下都看到效果。</code></pre><p>示例效果：</p><p>&lt;img align=&quot;right&quot; src=&quot;<span class="exturl" data-url="aHR0cHM6Ly9zMi5sb2xpLm5ldC8yMDIyLzEwLzIzL0cydkpURGhTTTVZZHd6SS5wbmc=">https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png</span>&quot; alt=&quot;demo.png&quot;/&gt;</p><p>这是一个示例图片。</p><p>图片显示在 N 段文字的右边。</p><p>N 与图片高度有关。</p><p>刷屏行。</p><p>刷屏行。</p><p>到这里应该不会受影响了，本行应该延伸到了图片的正下方，所以我要足够长才能确保不同的屏幕下都看到效果。</p><h2 id="控制图片大小和位置"><a class="anchor" href="#控制图片大小和位置">#</a> 控制图片大小和位置</h2><p>标准的 Markdown 图片标记  <code>![]()</code>  无法指定图片的大小和位置，只能依赖默认的图片大小，默认居左。</p><p>而有时候源图太大想要缩小一点，或者想将图片居中，就仍需要借助 HTML 的标签来实现了。图片居中可以使用  <code>&lt;div&gt;</code>  标签加  <code>align</code>  属性来控制，图片宽高则用  <code>width</code>  和  <code>height</code>  来控制。</p><p>示例代码：</p><pre><code>**图片默认显示效果：**![demo.png](https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png)**加以控制后的效果：**&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;65&quot; height=&quot;75&quot; src=&quot;https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png&quot; alt=&quot;demo.png&quot;/&gt;&lt;/div&gt;</code></pre><p>示例效果：</p><p><strong>图片默认显示效果：</strong></p><p><img data-src="https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png" alt="demo.png" /></p><p><strong>加以控制后的效果：</strong></p><p>&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;65&quot; height=&quot;75&quot; src=&quot;<span class="exturl" data-url="aHR0cHM6Ly9zMi5sb2xpLm5ldC8yMDIyLzEwLzIzL0cydkpURGhTTTVZZHd6SS5wbmc=">https://s2.loli.net/2022/10/23/G2vJTDhSM5YdwzI.png</span>&quot; alt=&quot;demo.png&quot;&gt;&lt;/div&gt;</p><h2 id="格式化表格"><a class="anchor" href="#格式化表格">#</a> 格式化表格</h2><p>表格在渲染之后很整洁好看，但是在文件源码里却可能是这样的：</p><pre><code>|Header1|Header2||---|---||a|a||ab|ab||abc|abc|</code></pre><p>不知道你能不能忍，反正我是不能忍。</p><p>好在广大网友们的智慧是无穷的，在各种编辑器里为 Markdown 提供了表格格式化功能，比如我使用 Vim 编辑器，就有 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RocnV2YXNhZ2FyL3ZpbS10YWJsZS1tb2Rl">vim-table-mode</span> 插件，它能帮我自动将表格格式化成这样：</p><pre><code>| Header1 | Header2 ||---------|---------|| a       | a       || ab      | ab      || abc     | abc     |</code></pre><p>是不是看着舒服多了？</p><p>如果你不使用 Vim，也没有关系，比如 Atom 编辑器的 <span class="exturl" data-url="aHR0cHM6Ly9hdG9tLmlvL3BhY2thZ2VzL21hcmtkb3duLXRhYmxlLWZvcm1hdHRlcg==">markdown-table-formatter</span> 插件，Sublime Text 3 的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JpdHdpc2VyNzMvTWFya2Rvd25UYWJsZUZvcm1hdHRlcg==">MarkdownTableFormatter</span> 等等，都提供了类似的解决方案。</p><h2 id="使用-emoji"><a class="anchor" href="#使用-emoji">#</a> 使用 Emoji</h2><p>这个是 GitHub 对标准 Markdown 标记之外的扩展了，用得好能让文字生动一些。</p><p>示例代码：</p><pre><code>我和我的小伙伴们都笑了。:smile:</code></pre><p>示例效果：</p><p>我和我的小伙伴们都笑了。😄</p><p>更多可用 Emoji 代码参见 <span class="exturl" data-url="aHR0cHM6Ly93d3cud2VicGFnZWZ4LmNvbS90b29scy9lbW9qaS1jaGVhdC1zaGVldC8=">https://www.webpagefx.com/tools/emoji-cheat-sheet/</span>。</p><h2 id="行首缩进"><a class="anchor" href="#行首缩进">#</a> 行首缩进</h2><p>直接在 Markdown 里用空格和 Tab 键缩进在渲染后会被忽略掉，需要借助 HTML 转义字符在行首添加空格来实现， <code>&amp;ensp;</code>  代表半角空格， <code>&amp;emsp;</code>  代表全角空格。</p><p>示例代码：</p><pre><code>&amp;emsp;&amp;emsp;春天来了，又到了万物复苏的季节。</code></pre><p>示例效果：</p><p>  春天来了，又到了万物复苏的季节。</p><h2 id="展示数学公式"><a class="anchor" href="#展示数学公式">#</a> 展示数学公式</h2><p>如果是在 GitHub Pages，可以参考 <span class="exturl" data-url="aHR0cDovL3dhbmd1b2xpbi5naXRodWIuaW8vbWF0aG1hdGljc19yZW5kaW5nLw==">http://wanguolin.github.io/mathmatics_rending/</span> 使用 MathJax 来优雅地展示数学公式（非图片）。</p><p>如果是在 GitHub 项目的 README 等地方，目前我能找到的方案只能是贴图了，以下是一种比较方便的贴图方案：</p><ol><li><p>在 <span class="exturl" data-url="aHR0cHM6Ly93d3cuY29kZWNvZ3MuY29tL2xhdGV4L2VxbmVkaXRvci5waHA=">https://www.codecogs.com/latex/eqneditor.php</span> 网页上部的输入框里输入 LaTeX 公式，比如  <code>$$x=\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;$$</code> ；</p></li><li><p>在网页下部拷贝 URL Encoded 的内容，比如以上公式生成的是  <code>https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24</code> ；</p><p><img data-src="https://s2.loli.net/2022/10/23/7oARhJBOki8jFIu.jpg" alt="latex-img.png" /></p></li><li><p>在文档需要的地方使用以上 URL 贴图，比如</p><pre><code>![](https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24)</code></pre><p>示例效果：</p><p><img data-src="https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24" alt="" /></p></li></ol><h2 id="任务列表"><a class="anchor" href="#任务列表">#</a> 任务列表</h2><p>在 GitHub 和 GitLab 等网站，除了可以使用有序列表和无序列表外，还可以使用任务列表，很适合要列出一些清单的场景。</p><p>示例代码：</p><pre><code>**购物清单**- [ ] 一次性水杯- [x] 西瓜- [ ] 豆浆- [x] 可口可乐- [ ] 小茗同学</code></pre><p>示例效果：</p><p><strong>购物清单</strong></p><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true" /><label for="cbx_0"> 一次性水杯</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true" /><label for="cbx_1"> 西瓜</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true" /><label for="cbx_2"> 豆浆</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" checked="true" disabled="true" /><label for="cbx_3"> 可口可乐</label></li><li class="task-list-item"><input type="checkbox" id="cbx_4" disabled="true" /><label for="cbx_4"> 小茗同学</label></li></ul><h2 id="自动维护目录"><a class="anchor" href="#自动维护目录">#</a> 自动维护目录</h2><p>有时候维护一份比较长的文档，希望能够自动根据文档中的标题生成目录（Table of Contents），并且当标题有变化时自动更新目录，能减轻工作量，也不易出错。</p><p>如果你使用 Vim 编辑器，那可以使用我维护的插件 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL216bG9naW4vdmltLW1hcmtkb3duLXRvYw==">vim-markdown-toc</span> 来帮你完美地解决此事：</p><p><img data-src="https://s2.loli.net/2022/10/23/4wiapDIRJgjr1Pb.gif" alt="english.gif" /></p><p>插件地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL216bG9naW4vdmltLW1hcmtkb3duLXRvYw==">https://github.com/mzlogin/vim-markdown-toc</span></p><p>如果你使用其它编辑器，一般也能找到对应的解决方案，比如 Atom 编辑器的 <span class="exturl" data-url="aHR0cHM6Ly9hdG9tLmlvL3BhY2thZ2VzL21hcmtkb3duLXRvYw==">markdown-toc</span> 插件，Sublime Text 的 <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby9wYWNrYWdlcy9NYXJrZG93blRPQw==">MarkdownTOC</span> 插件等。</p><h2 id="后话"><a class="anchor" href="#后话">#</a> 后话</h2><p>好了，至此就此告一段落，希望大家在了解这些之后能有所收获，更好地排版，专注写作。</p><h2 id="参考"><a class="anchor" href="#参考">#</a> 参考</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21hdGlhc3NpbmdlcnMvYXdlc29tZS1yZWFkbWUvbWFzdGVyL3JlYWRtZS5tZA==">https://raw.githubusercontent.com/matiassingers/awesome-readme/master/readme.md</span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuenlidWx1by5jb20vc29uZ3BmZWkvbm90ZS8yNDczNDY=">https://www.zybuluo.com/songpfei/note/247346</span></li><li>本文转载自<span class="exturl" data-url="aHR0cHM6Ly9tYXpodWFuZy5vcmcv"> https://mazhuang.org/</span></li></ul>]]></content>
    
    
    <summary type="html">介绍 Markdown 的一些高级用法。</summary>
    
    
    
    <category term="计算机科学" scheme="http://example.com/categories/computer-science/"/>
    
    <category term="markdown基础运用" scheme="http://example.com/categories/computer-science/course-2/"/>
    
    
  </entry>
  
  <entry>
    <title>鞋带——伊恩结详解</title>
    <link href="http://example.com/2021/08/24/life/course-2/yien/"/>
    <id>http://example.com/2021/08/24/life/course-2/yien/</id>
    <published>2021-08-24T02:23:14.172Z</published>
    <updated>2022-10-23T15:39:10.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="center伊恩结center"><a class="anchor" href="#center伊恩结center">#</a> &lt;center&gt; 伊恩结 &lt;/center&gt;</h2><p><img data-src="https://s2.loli.net/2022/10/23/CDwa4bn3gp5RtcT.gif" alt="en.gif" /></p><p>今天就给大家安利一发这个『伊恩结』！伊恩结是在『利器』的某一期周报看到的。众所周知，我们现在系鞋带用的最多的应该是蝴蝶结。蝴蝶结其实不算方便，而且容易松开；而这个伊恩结却有着蝴蝶结相似的系法（所以有着相似的外观），而且说不会松开不会比蝴蝶结不容易掉。所以还是有学习的价值的。</p><pre><code>&lt;div align=center&gt;&lt;img width = '443' height ='350' src =&quot;https://cdn.jsdelivr.net/gh/yzlicr/images@1.1.1/life/yi.gif&quot;/&gt;&lt;/div&gt;</code></pre><p>&lt;div align=center&gt;&lt;img width = '443' height ='350' src=&quot;<span class="exturl" data-url="aHR0cHM6Ly9zMi5sb2xpLm5ldC8yMDIyLzEwLzIzL25sUGV1dEVxaTRvZzJITC5naWY=">https://s2.loli.net/2022/10/23/nlPeutEqi4og2HL.gif</span>&quot; &gt;&lt;/div&gt;</p><p>&lt;center&gt; 伊恩结 &lt;/center&gt;</p><p>如何系一个 “伊恩结”？简单来说，俩手拇指和食指各拿根鞋绳，一边正转，一边反转，然后一系就可以了。<br />就比蝴蝶结多绕一次，系出来还是比较美观的，剧烈运动也不会松。<br />上图还是看不懂，没关系，很正常，看看分解步骤：</p><p><img data-src="https://s2.loli.net/2022/10/23/41cIED5ZgaUJslB.png" alt="jie.png" /></p><p>&lt;center&gt; 伊恩结分解步骤 &lt;/center&gt;</p><p>实测效果熟练后确实会比蝴蝶结要快，但是还是有松开的情况。</p>]]></content>
    
    
    <summary type="html">伊恩结</summary>
    
    
    
    <category term="生活篇" scheme="http://example.com/categories/life/"/>
    
    <category term="生活技能" scheme="http://example.com/categories/life/course-2/"/>
    
    
  </entry>
  
  <entry>
    <title>1、认识Web和Web标准</title>
    <link href="http://example.com/2021/08/24/computer-science/course-1/Web-know/"/>
    <id>http://example.com/2021/08/24/computer-science/course-1/Web-know/</id>
    <published>2021-08-24T02:23:14.160Z</published>
    <updated>2022-10-23T06:42:10.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web-网页-浏览器"><a class="anchor" href="#web-网页-浏览器">#</a> Web、网页、浏览器</h2><h3 id="web"><a class="anchor" href="#web">#</a> Web</h3><p>Web（World Wide Web）即全球广域网，也称为万维网。</p><p>我们常说的 <code>Web端</code> 就是网页端。</p><h3 id="网页"><a class="anchor" href="#网页">#</a> 网页</h3><p><strong>网页是构成网站的基本元素</strong>。网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及 Flash 等。</p><p>我们在浏览器上输入网址后，打开的任何一个页面，都是属于网页。</p><h3 id="浏览器"><a class="anchor" href="#浏览器">#</a> 浏览器</h3><p>浏览器是网页运行的平台，常见的浏览器有谷歌（Chrome）、Safari、火狐（Firefox）、IE、Edge、Opera 等。</p><p>关于浏览器的详细介绍，可以看下一篇文章：《<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FpYW5ndXlpaGFvL1dlYi9ibG9iL21hc3Rlci8wMS1odG1sLzAyLSVFNiVCNSU4RiVFOCVBNyU4OCVFNSU5OSVBOCVFNyU5QSU4NCVFNCVCQiU4QiVFNyVCQiU4RC5tZA==">浏览器的介绍</span>》</p><h2 id="web标准"><a class="anchor" href="#web标准">#</a> Web 标准</h2><h3 id="w3c组织"><a class="anchor" href="#w3c组织">#</a> W3C 组织</h3><p><strong>W3C</strong>：万维网联盟组织，用来制定 web 标准的机构（组织）。</p><p>W3C 万维网联盟是国际最著名的标准化组织。1994 年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。</p><p>W3C 组织就类似于现实世界中的联合国。</p><p>为什么要遵循 WEB 标准呢？因为很多浏览器的浏览器内核不同，导致页面解析出来的效果可能会有差异，给开发者增加无谓的工作量。因此需要指定统一的标准。</p><h3 id="web-标准"><a class="anchor" href="#web-标准">#</a> Web 标准</h3><p><strong>Web 标准</strong>：制作网页要遵循的规范。</p><p>Web 标准不是某一个标准，而是由 W3C 组织和其他标准化组织制定的一系列标准的集合。</p><p><strong>1、Web 标准包括三个方面</strong>：</p><ul><li><p>结构标准（HTML）：用于对网页元素进行整理和分类。</p></li><li><p>表现标准（CSS）：用于设置网页元素的版式、颜色、大小等外观样式。</p></li><li><p>行为标准（JS）：用于定义网页的交互和行为。</p></li></ul><p>根据上面的 Web 标准，可以将 Web 前端分为三层，如下。</p><p><strong>2、Web 前端分三层</strong>：</p><ul><li>HTML（HyperText Markup Language）：超文本标记语言。从<strong>语义</strong>的角度描述页面的<strong>结构</strong>。相当于人的身体组织结构。</li><li>CSS（Cascading Style Sheets）：层叠样式表。从<strong>审美</strong>的角度美化页面的<strong>样式</strong>。相当于人的衣服和打扮。</li><li>JS：JavaScript。从<strong>交互</strong>的角度描述页面的<strong>行为</strong>。相当于人的动作，让人有生命力。</li></ul><hr />]]></content>
    
    
    <summary type="html">简单介绍 Web。</summary>
    
    
    
    <category term="计算机科学" scheme="http://example.com/categories/computer-science/"/>
    
    <category term="WEB前端技术" scheme="http://example.com/categories/computer-science/course-1/"/>
    
    
  </entry>
  
  <entry>
    <title>2、HTML基本概念</title>
    <link href="http://example.com/2021/08/24/computer-science/course-1/HTML-2/"/>
    <id>http://example.com/2021/08/24/computer-science/course-1/HTML-2/</id>
    <published>2021-08-24T02:23:14.135Z</published>
    <updated>2022-10-23T15:27:09.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编辑器相关"><a class="anchor" href="#编辑器相关">#</a> 编辑器相关</h2><p>前端开发的编辑器软件，我首先推荐 VS Code，其次推荐 Sublime Text。</p><p>有人说 WebStorm 也不错？但真实情况是，自从 VS Code 问世之后，用 WebStorm 的人越来越少了。</p><p>PS：文件的后缀名不能决定文件格式，只能决定打开文件打开的方式。</p><h3 id="vs-code-的使用"><a class="anchor" href="#vs-code-的使用">#</a> VS Code 的使用</h3><p>详情请移步至：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FpYW5ndXlpaGFvL1dlYi9ibG9iL21hc3Rlci8wMC0lRTUlODklOEQlRTclQUIlQUYlRTUlQjclQTUlRTUlODUlQjcvMDEtVlMlMjBDb2RlJUU3JTlBJTg0JUU0JUJEJUJGJUU3JTk0JUE4Lm1k">第一次使用 VS Code 时你应该知道的一切配置</span></p><h3 id="sublime-text-的使用"><a class="anchor" href="#sublime-text-的使用">#</a> Sublime Text 的使用</h3><p>详情请移步至：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FpYW5ndXlpaGFvL01hYy9ibG9iL21hc3Rlci8wNS0lRTUlODUlQTglRTUlQjklQjMlRTUlOEYlQjAlRTglQkQlQUYlRTQlQkIlQjYvU3VibGltZSUyMFRleHQlRTQlQkQlQkYlRTclOTQlQTglRTYlOEElODAlRTUlQjclQTcubWQ=">Sublime Text 使用技巧</span></p><h2 id="html的概述"><a class="anchor" href="#html的概述">#</a> HTML 的概述</h2><h3 id="html的概念"><a class="anchor" href="#html的概念">#</a> HTML 的概念</h3><p><strong>HTML</strong> 全称为 HyperText Markup Language，译为 &lt;font color=#0000ff&gt;<strong> 超文本标记语言</strong> &lt;/font&gt;。</p><p>HTML 不是一种编程语言，是一种描述性的<strong>标记语言</strong>。</p><p><strong>作用</strong>：HTML 是负责描述文档<strong>语义</strong>的语言。</p><h3 id="概念超文本"><a class="anchor" href="#概念超文本">#</a> 概念：超文本</h3><p>所谓的超文本，有两层含义：</p><p>（1）图片、音频、视频、动画、多媒体等内容，成为超文本，因为它们超出了文本的限制。</p><p>（2）不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件进行连接。即：超级链接文本。</p><h3 id="概念标记语言"><a class="anchor" href="#概念标记语言">#</a> 概念：标记语言</h3><p>HTML 不是一种编程语言，是一种描述性的<strong>标记语言</strong>。这主要有两层含义：</p><p>（1）<strong>标记语言是一套标记标签</strong>。比如：标签 <code>&lt;a&gt;</code>  表示超链接、标签 <code>&lt;img&gt;</code>  表示图片、标签 <code>&lt;h1&gt;</code>  表示一级标题等等，它们都是属于 HTML 标签。</p><p>说的通俗一点就是：网页是由网页元素组成的，这些元素是由 HTML 标签描述出来，然后通过浏览器解析，就可以显示给用户看了。</p><p>（2）编程语言是有编译过程的，而标记语言没有编译过程，HTML 标签是直接由浏览器解析执行。</p><h3 id="html是负责描述文档语义的语言"><a class="anchor" href="#html是负责描述文档语义的语言">#</a> HTML 是负责描述文档语义的语言</h3><p>HTML 格式的文件是一个纯本文文件（就是用 txt 文件改名而成），用一些标签来描述语义，这些标签在浏览器页面上是无法直观看到的，所以称之为 “超文本标记语言”。</p><p>接下来，我们需要学习 HTML 中的很多 “标签对儿”，这些 “标签对儿” 能够给文本不同的语义。</p><p>比如，面试的时候问你， <code>&lt;h1&gt;</code>  标签有什么作用？</p><ul><li>正确答案：给文本增加主标题的语义。</li><li>错误答案：给文字加粗、加黑、变大。</li></ul><p>关乎 “语义” 的更深刻理解，等接下来我们学习了各种标签，就明白了。</p><h2 id="html的历史"><a class="anchor" href="#html的历史">#</a> HTML 的历史</h2><p><img data-src="https://s2.loli.net/2022/10/23/91mPuyYdJRlGQTi.png" alt="20151001_1001.png" /></p><p>其中，我们专门来对 XHTML 做一个介绍。</p><p><strong>XHTML 介绍：</strong><br />XHTML：Extensible Hypertext Markup Language，可扩展超文本标注语言。<br />XHTML 的主要目的是为了 &lt;font color=&quot;blue&quot;&gt;<strong> 取代 HTML</strong>&lt;/font&gt;，也可以理解为 HTML 的升级版。<br />HTML 的标记书写很不规范，会造成其它的设备 (ipad、手机、电视等) 无法正常显示。<br />XHTML 与 HTML4.0 的标记基本上一样。<br />XHTML 是 &lt;font color=&quot;blue&quot;&gt;<strong> 严格的、纯净的</strong> &lt;/font&gt;HTML。</p><p>我们稍后将对 XHTML 的编写规范进行介绍。</p><h2 id="html的专有名词"><a class="anchor" href="#html的专有名词">#</a> HTML 的专有名词</h2><ul><li>网页 ：由各种标记组成的一个页面就叫网页。</li><li>主页 (首页) : 一个网站的起始页面或者导航页面。</li><li>标记：  比如 <code>&lt;p&gt;</code>  称为开始标记 ， <code>&lt;/p&gt;</code>  称为结束标记，也叫标签。每个标签都规定好了特殊的含义。</li><li>元素：比如 <code>&lt;p&gt;内容&lt;/p&gt;</code>  称为元素.</li><li>属性：给每一个标签所做的辅助信息。</li><li>XHTML：符合 XML 语法标准的 HTML。</li><li>DHTML：dynamic，动态的。 <code>javascript + css + html</code>  合起来的页面就是一个 DHTML。</li><li>HTTP：超文本传输协议。用来规定客户端浏览器和服务端交互时数据的一个格式。SMTP：邮件传输协议，FTP：文件传输协议。</li></ul><h2 id="书写第一个-html-页面"><a class="anchor" href="#书写第一个-html-页面">#</a> 书写第一个 HTML 页面</h2><p>我们打开 VS Code 软件，新建一个文件，名叫 <code>test.html</code> （注意，文件名是 <code>test</code> ，后缀名是 <code>html</code> ），保存到本地。</p><p>紧接着，在文件里，输入 <code>html:5</code> ，然后按一下键盘上的 <code>Tab</code>  键，就可以自动生成如下内容：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>上面的内容，就是 html 页面的骨架。我们在此基础之上，新增几个标签，完整代码如下：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>我是三级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.jd.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是超链接，可以点击一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>标签写完之后，我们用 chrome 浏览器打开上面这个 <code>test.html</code>  文件，看看页面效果：</p><p>到此，第一个简单的 HTML 页面就写完了。是不是很有成就感？</p><h2 id="html结构详解"><a class="anchor" href="#html结构详解">#</a> HTML 结构详解</h2><p>HTML 标签通常是成对出现的（&lt;font color=&quot;blue&quot;&gt;<strong> 双边标记</strong> &lt;/font&gt;），比如  <code>&lt;div&gt;</code>  和  <code>&lt;/div&gt;</code> ；也有少部分单标签（&lt;font color=&quot;blue&quot;&gt;<strong> 单边标记</strong> &lt;/font&gt;），如： <code>&lt;br /&gt;</code> 、 <code>&lt;hr /&gt;</code>  和 <code>&lt;img src=&quot;images/1.jpg&quot; /&gt;</code>  等。</p><p>属性与标记之间、各属性之间需要以空格隔开。属性值以双引号括起来。</p><h4 id="html骨架标签分类"><a class="anchor" href="#html骨架标签分类">#</a> html 骨架标签分类</h4><table><thead><tr><th>标签名</th><th style="text-align:center">定义</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><code>&lt;html&gt;&lt;/html&gt;</code></td><td style="text-align:center">HTML 标签</td><td style="text-align:left">页面中最大的标签，我们成为根标签</td></tr><tr><td><code>&lt;head&gt;&lt;/head&gt;</code></td><td style="text-align:center">文档的头部</td><td style="text-align:left">注意在 head 标签中我们必须要设置的标签是 title</td></tr><tr><td><code>&lt;titile&gt;&lt;/title&gt;</code></td><td style="text-align:center">文档的标题</td><td style="text-align:left">让页面拥有一个属于自己的网页标题</td></tr><tr><td><code>&lt;body&gt;&lt;/body&gt;</code></td><td style="text-align:center">文档的主体</td><td style="text-align:left">元素包含文档的所有内容，页面内容 基本都是放到 body 里面的</td></tr></tbody></table><h3 id="快速生成-html-的骨架"><a class="anchor" href="#快速生成-html-的骨架">#</a> 快速生成 html 的骨架</h3><p><strong>方式 1</strong>：在 VS Code 中新建 html 文件，输入 <code>html:5</code> ，按  <code>Tab</code>  键后，自动生成的代码如下：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><strong>方式 2</strong>：在 Sublime Text 中安装 <code>Emmet</code>  插件。新建 html 文件，输入 <code>html:5</code> ，按 <code>Tab</code>  键后，自动生成的代码如下：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><strong>方式 3</strong>：在 Sublime Text 中安装 <code>Emmet</code>  插件。新建 html 文件，输入 <code>html:xt</code> ，按 <code>Tab</code>  键后，自动生成的代码如下：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xml:</span>lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>上面的方式 2 和方式 3 中，我们会发现，第一行的内容有些不太一样，这就是我们接下来要讲的<strong>文档声明头</strong>。</p><h3 id="1-文档声明头"><a class="anchor" href="#1-文档声明头">#</a> 1、文档声明头</h3><p>任何一个标准的 HTML 页面，第一行一定是一个以 <code>&lt;!DOCTYPE ……&gt;</code>  开头的语句。这一行，就是文档声明头，即 DocType Declaration，简称 DTD。</p><p><strong>DTD 可告知浏览器文档使用哪种 HTML 或 XHTML 规范</strong>。</p><h4 id="html401有哪些规范呢"><a class="anchor" href="#html401有哪些规范呢">#</a> HTML4.01 有哪些规范呢？</h4><p><strong>HTML4.01</strong> 这个版本是 IE6 开始兼容的。<strong>HTML5 是 IE9 开始兼容的</strong>。如今，手机、移动端的网页，就可以使用 HTML5 了，因为其兼容性更高。</p><p>说个题外话，html1 至 html3 是美国军方以及高等研究所用的，并未对外公开。</p><p>HTML4.01 里面有两大种规范，每大种规范里面又各有 3 种小规范。所以一共 6 种规范（见下图）。</p><p>HTML4.01 里面规定了<strong>普通</strong>和<strong> XHTML</strong> 两大种规范。HTML 觉得自己有一些规定不严谨，比如，标签是否可以用大写字母呢？ <code>&lt;H1&gt;&lt;/H1&gt;</code>  所以，HTML 就觉得，把一些规范严格的标准，又制定了一个 XHTML1.0。在 XHTML 中的字母 X，表示 “严格的”。</p><p>总结一下，HTML4.01 一共有 6 种 DTD。说白了，HTML 的第一行语句一共有 6 种情况：</p><p><img data-src="https://s2.loli.net/2022/10/23/eFp5iWQLaSnXg8O.png" alt="20170629_1600.png" /></p><p>下面对上图中的三种小规范进行解释：</p><p><strong>strict</strong>：</p><p>表示 “严格的”，这种模式里面的要求更为严格。这种严格体现在哪里？有一些标签不能使用。<br />比如，u 标签，就是给一个本文加下划线，但是这和 HTML 的本质有冲突，因为 HTML 最好是只负责语义，不要负责样式，而 u 这个下划线是样式。所以，在 strict 中是不能使用 u 标签的。</p><p>那怎么给文本增加下划线呢？今后将使用 css 属性来解决。</p><p>XHTML1.0 更为严格，因为这个体系本身规定比如标签必须是小写字母、必须严格闭合标签、必须使用引号引起属性等等。</p><p><strong>Transitional</strong>：表示 “普通的”，这种模式就是没有一些别的规范。</p><p><strong>Frameset</strong>：表示 “框架”，在框架的页面使用。</p><p>在 sublime 输入的 html:xt，x 表示 XHTML，t 表示 transitional。</p><p>在 HTML5 中极大的简化了 DTD，也就是说 HTML5 中就没有 XHTML 了。HTML5 的 DTD（文档声明头）如下：</p><pre><code>&lt;!DOCTYPE html&gt;</code></pre><h3 id="2-页面语言-lang"><a class="anchor" href="#2-页面语言-lang">#</a> 2、页面语言  <code>lang</code></h3><p>下面这行标签，用于指定页面的语言类型：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>最常见的语言类型有两种：</p><ul><li><p>en：定义页面语言为英语。</p></li><li><p>zh-CN：定义页面语言为中文。</p></li></ul><h3 id="2-头标签-head"><a class="anchor" href="#2-头标签-head">#</a> 2、头标签  <code>head</code></h3><h4 id="html5-的比较完整的骨架"><a class="anchor" href="#html5-的比较完整的骨架">#</a> html5 的比较完整的骨架：</h4><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>厉害很厉害<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>网易是中国领先的互联网技术公司，为用户提供免费邮箱、游戏、搜索引擎服务，开设新闻、娱乐、体育等30多个内容频道，及博客、视频、论坛等互动交流，网聚人的力量。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>面试题：</p><ul><li>问：网页的 head 标签里面，表示的是页面的配置，有什么配置？</li><li>答：字符集、关键词、页面描述、页面标题、IE 适配、视口、iPhone 小图标等等。</li></ul><p>头标签内部的常见标签如下：</p><ul><li><code>&lt;title&gt;</code> ：指定整个网页的标题，在浏览器最上方显示。</li><li><code>&lt;base&gt;</code> ：为页面上的所有链接规定默认地址或默认目标。</li><li><code>&lt;meta&gt;</code> ：提供有关页面的基本信息</li><li><code>&lt;body&gt;</code> ：用于定义 HTML 文档所要显示的内容，也称为主体标签。我们所写的代码必须放在此标签內。</li><li><code>&lt;link&gt;</code> ：定义文档与外部资源的关系。</li></ul><p><strong>meta 标签</strong>：</p><p>meta 表示 “元”。“元” 配置，就是表示基本的配置项目。</p><p>常见的几种 meta 标签如下：</p><p>（1）字符集 charset：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>字符集用 meta 标签中的 <code>charset</code>  定义，charset 就是 character set（即 “字符集”），即<strong>网页的编码方式</strong>。</p><p><strong>字符集</strong> (Character set) 是多个字符的集合。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</p><p>上面这行代码非常关键， 是必须要写的代码，否则可能导致乱码。比如你保存的时候，meta 写的和声明的不匹配，那么浏览器就是乱码。</p><p>utf-8 是目前最常用的字符集编码方式，常用的字符集编码方式还有 gbk 和 gb2312 等。关于 “编码方式”，我们在下一段会详细介绍。</p><p>（2）视口 viewport：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><code>width=device-width</code>  ：表示视口宽度等于屏幕宽度。</p><p>viewport 这个知识点，初学者还比较难理解，以后学 Web 移动端的时候会用到。</p><p>（3）定义 “关键词”：</p><p>举例如下：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>网易,邮箱,游戏,新闻,体育,娱乐,女性,亚运,论坛,短信<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr></table></figure><p>这些关键词，就是告诉搜索引擎，这个网页是干嘛的，能够提高搜索命中率。让别人能够找到你，搜索到你。</p><p>（4）定义 “页面描述”：</p><p>meta 除了可以设置字符集，还可以设置关键字和页面描述。</p><p>只要设置 Description 页面描述，那么百度搜索结果，就能够显示这些语句，这个技术叫做<strong> SEO</strong>（search engine optimization，搜索引擎优化）。</p><p>设置页面描述的举例：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>网易是中国领先的互联网技术公司，为用户提供免费邮箱、游戏、搜索引擎服务，开设新闻、娱乐、体育等30多个内容频道，及博客、视频、论坛等互动交流，网聚人的力量。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr></table></figure><p>效果如下：</p><p><img data-src="https://s2.loli.net/2022/10/23/yHN5vLUDo6fQwiG.png" alt="20170629_1743.png" /></p><p>上面的几种 <code>&lt;meta&gt;</code>  标签都不用记，但是另外还有一个 <code>&lt;meta&gt;</code>  标签是需要记住的：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3;http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>上面这个标签的意思是说，3 秒之后，自动跳转到百度页面。</p><p><strong>title 标签</strong>:</p><p>用于设置网页标题：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网页的标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>title 标签也是有助于 SEO 搜索引擎优化的。</p><p><strong>base 标签</strong>：</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>base 标签用于指定基础的路径。指定之后，所有的 a 链接都是以这个路径为基准。</p><h3 id="3-body标签"><a class="anchor" href="#3-body标签">#</a> 3、 <code>&lt;body&gt;</code>  标签</h3><p><code>&lt;body&gt;</code>  标签的属性有：</p><ul><li><code>bgcolor</code> ：设置整个网页的背景颜色。</li><li><code>background</code> ：设置整个网页的背景图片。</li><li><code>text</code> ：设置网页中的文本颜色。</li><li><code>leftmargin</code> ：网页的左边距。IE 浏览器默认是 8 个像素。</li><li><code>topmargin</code> ：网页的上边距。</li><li><code>rightmargin</code> ：网页的右边距。</li><li><code>bottommargin</code> ：网页的下边距。</li></ul><p><code>&lt;body&gt;</code>  标签另外还有一些属性，这里用个例子来解释：</p><p><img data-src="https://s2.loli.net/2022/10/23/ugpoUC78f5V36vA.png" alt="2015-10-02-cnblogs_html_39.png" /></p><p>上方代码中，当我们对 <code>点我点我</code> 这几个字使用超链时， <code>link</code>  属性表示默认显示的颜色、 <code>alink</code>  属性表示鼠标点击但是还没有松开时的颜色、 <code>vlink</code>  属性表示点击完成之后显示的颜色。效果如下：</p><p><img data-src="https://s2.loli.net/2022/10/23/CScl1o94mFDeN2k.gif" alt="2015-10-02-cnblogs_html_05.gif" /></p><h2 id="计算机编码介绍"><a class="anchor" href="#计算机编码介绍">#</a> 计算机编码介绍</h2><p>计算机，不能直接存储文字，存储的是编码。</p><p>计算机只能处理二进制的数据，其它数据，比如：0-9、a-z、A-Z，这些字符，我们可以定义一套规则来表示。假如：A 用 110 表示，B 用 111 表示等。</p><p><strong>ASCII 码：</strong><br />美国发布的，用 1 个字节 (8 位二进制) 来表示一个字符，共可以表示 2^8=256 个字符。<br />美国的国家语言是英语，只要能表示 0-9、a-z、A-Z、特殊符号。</p><p><strong>ANSI 编码：</strong><br /><strong>每个国家为了显示本国的语言，都对 ASCII 码进行了扩展</strong>。用 2 个字节 (16 位二进制) 来表示一个汉字，共可以表示 2^16＝65536 个汉字。例如：<br />中国的 ANSI 编码是 GB2312 编码 (简体)，对 6763 汉字进行编码，含 600 多特殊字符。另外还有 GBK (简体)。<br />日本的 ANSI 编码是 JIS 编码。<br />台湾的 ANSI 编码是 BIG5 编码（繁体）。</p><p><strong>GBK：</strong><br />对 GB2312 进行了扩展，用来显示罕见的、古汉语的汉字。现在已经收录了 2.1 万左右。并提供了 1890 个汉字码位。K 的含义就是 “扩展”。</p><p><strong>Unicode 编码 (统一编码)：</strong><br />用 4 个字节 (32 位二进制) 来表示一个字符，想法不错，但效率太低。例如，字母 A 用 ASCII 表示的话一个字节就够，可用 Unicode 编码的话，得用 4 个字节表示，造成了空间的极大浪费。A 的 Unicode 编码是 0000 0000 0000 0000 0000 0000 0100 0000</p><p><strong>UTF-8 (Unicode Transform Format) 编码：</strong><br />根据字符的不同，选择其编码的长度。比如：一个字符 A 用 1 个字节表示，一个汉字用 2 个字节表示。</p><p>毫无疑问，开发中，都用<strong> UTF-8</strong> 编码吧，准没错。</p><p><strong>中文能够使用的字符集两种：</strong></p><ul><li><p>第一种：UTF-8。UTF-8 是国际通用字库，里面涵盖了所有地球上所有人类的语言文字，比如阿拉伯文、汉语、鸟语……</p></li><li><p>第二种：GBK（对 GB2312 进行了扩展）。gb2312 是国标，是中国的字库，里面<strong>仅</strong>涵盖了汉字和一些常用外文，比如日文片假名，和常见的符号。</p></li></ul><p>字库规模：  UTF-8（字很全） &gt; gb2312（只有汉字）</p><p><strong>重点 1：避免乱码</strong></p><p>我们用 meta 标签声明的当前这个 html 文档的字库，一定要和保存的文件编码类型一样，否则乱码（重点）。</p><p>拿 sublime 编辑器举例，当我们不设置的时候，sublime 默认类型就是 UTF-8。而一旦更改为 gb2312 的时候，就一定要记得设置一下 sublime 的保存类型：  <code>文件→ set File Encoding to → Chinese Simplified(GBK)</code> 。VS Code 的道理一样。</p><p><strong>重点 2：UTF-8 和 gb2312 的比较</strong></p><p>保存大小：UTF-8（更臃肿、加载更慢） &gt; gb2312 （更小巧，加载更快）</p><p>总结：</p><ul><li>UTF-8：字多，有各种国家的语言，但是保存尺寸大，文件臃肿；</li><li>gb2312：字少，只用中文和少数外语和符号，但是尺寸小，文件小巧。</li></ul><p>列出 2 个使用情形：</p><p>1） 你们公司是做日本动漫的，经常出现一些日语动漫的名字，网页要使用 UTF-8。如果用 gb2312 将无法显示日语。<br />2） 你们公司就是中文网页，极度的追求网页的显示速度，要使用 gb2312。如果使用 UTF-8 将每个汉字多一个 byte，所以 5000 个汉字，多 5kb。</p><p>我们亲测：</p><ul><li>qq 网、网易、搜狐都是使用 gb2312。这些公司，都追求显示速度。</li><li>新华网藏语频道，使用的是 UTF-8，保证字符集的数量。</li></ul><p>我们是怎么查看网页的编码方式的呢？在浏览器中打开网页，右键，选择 “查看网页源代码”，找到 meta 标签中的 charset 属性即可。</p><p>那么，我们为什么可以查看网页的源代码呢？因为这个打开的 html 网页已经存到我的临时文件夹里了，临时文件夹里的 html 是纯文本文件，纯文本文件自然可以查看网页的源代码。</p><h2 id="html的规范"><a class="anchor" href="#html的规范">#</a> HTML 的规范</h2><ul><li>HTML 不区分大小写，但 HTML 的标签名、类名、标签属性、大部分属性值建议统一用小写。</li><li>HTML 页面的后缀名是 html 或者 htm (有一些系统不支持后缀名长度超过 3 个字符，比如 dos 系统)</li></ul><h3 id="1-编写xhtml的规范"><a class="anchor" href="#1-编写xhtml的规范">#</a> 1、编写 XHTML 的规范：</h3><p>（1）所有标记元素都要正确的嵌套，不能交叉嵌套。正确写法举例： <code>&lt;h1&gt;&lt;font&gt;&lt;/font&gt;&lt;/h1&gt;</code></p><p>（2）所有的标记都必须小写。</p><p>（3）所有的标签都必须闭合。</p><ul><li><p>双标签： <code>&lt;span&gt;&lt;/span&gt;</code></p></li><li><p>单标签： <code>&lt;br&gt;</code>  建议写成  <code>&lt;br /&gt;</code>     <code>&lt;hr&gt;</code>  建议转成  <code>&lt;hr /&gt;</code> ，还有 <code>&lt;img src=“URL” /&gt;</code></p></li></ul><p>（4）所有的属性值必须加引号。 <code>&lt;font  color=&quot;red&quot;&gt;&lt;/font&gt;</code></p><p>（5）所有的属性必须有值。 <code>&lt;hr noshade=&quot;noshade&quot;&gt;</code> 、 <code>&lt;input  type=&quot;radio&quot; checked=&quot;checked&quot; /&gt;</code></p><p>（6）XHTML 文档开头必须要有 DTD 文档类型定义。</p><h3 id="2-html的基本语法特性"><a class="anchor" href="#2-html的基本语法特性">#</a> 2、HTML 的基本语法特性</h3><h4 id="1html对换行不敏感对tab不敏感"><a class="anchor" href="#1html对换行不敏感对tab不敏感">#</a> （1）HTML 对换行不敏感，对 tab 不敏感</h4><p>HTML 只在乎标签的嵌套结构，嵌套的关系。谁嵌套了谁，谁被谁嵌套了，和换行、tab 无关。换不换行、tab 不 tab，都不影响页面的结构。</p><p>也就是说，HTML 不是依靠缩进来表示嵌套的，而是看标签的嵌套关系。但是，我们发现有良好的缩进，代码更易读。建议大家都正确缩进标签。</p><p>百度为了追求极致的显示速度，所有 HTML 标签都没有换行、都没有缩进（tab），HTML 和换不换行无关，标签的层次依然清晰，只不过程序员不可读了。如下图所示：</p><p><img data-src="https://s2.loli.net/2022/10/23/f64tIrUw7dMRc3G.png" alt="20170629_2226.png" /></p><h4 id="2空白折叠现象"><a class="anchor" href="#2空白折叠现象">#</a> （2）空白折叠现象</h4><p>HTML 中所有的<strong>文字之间</strong>，如果有空格、换行、tab 都将被折叠为一个空格显示。</p><p>举例如下：</p><p><img data-src="https://s2.loli.net/2022/10/23/w7Lrum3t8xi2cWO.jpg" alt="20170629_2230.jpg" /></p><h4 id="3标签要严格封闭"><a class="anchor" href="#3标签要严格封闭">#</a> （3）标签要严格封闭</h4><p>标签不封闭的结果是灾难性的。</p><p>标签不封闭的举例如下：</p><p><img data-src="https://s2.loli.net/2022/10/23/IYu1JF4QywdRS9s.jpg" alt="20170629_2245.jpg" /></p>]]></content>
    
    
    <summary type="html">HTML概述及简单的编写规范。</summary>
    
    
    
    <category term="计算机科学" scheme="http://example.com/categories/computer-science/"/>
    
    <category term="WEB前端技术" scheme="http://example.com/categories/computer-science/course-1/"/>
    
    
  </entry>
  
</feed>
